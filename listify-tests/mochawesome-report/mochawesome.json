{
  "stats": {
    "suites": 18,
    "tests": 147,
    "passes": 147,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-15T01:50:01.784Z",
    "end": "2023-11-15T02:00:50.789Z",
    "duration": 649005,
    "testsRegistered": 147,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "33da8a4a-448f-493e-88a5-45598aa8283b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
          "title": "Login",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\login\\login.spec.js",
          "file": "\\test\\login\\login.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login\"",
              "fullTitle": "Login \"after all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "63adedc6-8fbe-443d-81b0-1b68b6192f6a",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Login\"",
              "fullTitle": "Login \"after each\" hook in \"Login\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + '.jpeg';\ndriver.takeScreenshot().then(\n    function(image){\n        require('fs').writeFileSync('./mochawesome-report/screenshots/login/' + imageFileName, image, 'base64');\n    }\n)\naddContext(this, 'A continuación imagen del resultado de la prueba.');\naddContext(this, './screenshots/login/' + imageFileName);",
              "err": {},
              "uuid": "14631a44-9187-4f60-b950-b68e0cf0e8ce",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "LOG01 - Login user success",
              "fullTitle": "Login LOG01 - Login user success",
              "timedOut": false,
              "duration": 6928,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/login/LOG01 - Login user success.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('PLAYER@EMAIL.COM');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('345678')\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('logout')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('confirm-main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base')).click();",
              "err": {},
              "uuid": "50f957d5-4047-4ef2-bccb-23f8647a947e",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LOG02 - Login user unsuccessfully",
              "fullTitle": "Login LOG02 - Login user unsuccessfully",
              "timedOut": false,
              "duration": 1775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/login/LOG02 - Login user unsuccessfully.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummyPass');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include(\"Can't login, please check the credentials\");\n});",
              "err": {},
              "uuid": "43661c05-ef62-4f28-b9f8-f8e8d0748a3d",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LOG03 - Email field empty",
              "fullTitle": "Login LOG03 - Email field empty",
              "timedOut": false,
              "duration": 1360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/login/LOG03 - Email field empty.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-1')).sendKeys('789012');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field EMAIL_IN is required');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include(\"Can't login, please check the fields\");\n});",
              "err": {},
              "uuid": "17cbc3bf-2d38-4c7e-a7a9-ccb22b9450a5",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LOG04 - Email overpasing max length",
              "fullTitle": "Login LOG04 - Email overpasing max length",
              "timedOut": false,
              "duration": 1427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/login/LOG04 - Email overpasing max length.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('thisisanemailfortestingpurposesonly1234567890asdfgf');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('789012');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field EMAIL_IN must have a maximum of 50 characters');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include(\"Can't login, please check the fields\");\n});",
              "err": {},
              "uuid": "d09a2bb6-952e-45eb-989e-b16563092636",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LOG05 - Sql email injection",
              "fullTitle": "Login LOG05 - Sql email injection",
              "timedOut": false,
              "duration": 1401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/login/LOG05 - Sql email injection.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys(\"' or'1'='1\");\nawait driver.findElement(By.id('mat-input-1')).sendKeys('789012');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field EMAIL_IN is not a valid email');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include(\"Can't login, please check the fields\");\n});",
              "err": {},
              "uuid": "aacf6421-da88-4cea-a990-526f94d39da5",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LOG06 - Login with an invalid email",
              "fullTitle": "Login LOG06 - Login with an invalid email",
              "timedOut": false,
              "duration": 1422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/login/LOG06 - Login with an invalid email.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('adm@email.co');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('789012');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field EMAIL_IN is not a valid email');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include(\"Can't login, please check the fields\");\n});",
              "err": {},
              "uuid": "68faf106-6f2b-432a-9d33-5bf172141fe9",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LOG07 - Login with an invalid email with special characters",
              "fullTitle": "Login LOG07 - Login with an invalid email with special characters",
              "timedOut": false,
              "duration": 1403,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/login/LOG07 - Login with an invalid email with special characters.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('!\"·$%&/()=?¿@email.com');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('1234567890');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field EMAIL_IN is not a valid email');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include(\"Can't login, please check the fields\");\n});",
              "err": {},
              "uuid": "67556b1f-b82f-48b7-a246-80339059831a",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LOG08 - Password field empty",
              "fullTitle": "Login LOG08 - Password field empty",
              "timedOut": false,
              "duration": 1366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/login/LOG08 - Password field empty.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('admin@email.com');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field PASSWORD_IN is required');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include(\"Can't login, please check the fields\");\n});",
              "err": {},
              "uuid": "50ce3c54-b805-4971-8b72-722fd08926e3",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LOG09 - Password underpassing the limit",
              "fullTitle": "Login LOG09 - Password underpassing the limit",
              "timedOut": false,
              "duration": 1408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/login/LOG09 - Password underpassing the limit.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('admin@email.com');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('1');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field PASSWORD_IN must have at least 6 characters');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include(\"Can't login, please check the fields\");\n});",
              "err": {},
              "uuid": "9b0f49c4-457d-4a7a-9d25-d5ea3cf929d8",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LOG10 - Password overpassing the limit",
              "fullTitle": "Login LOG10 - Password overpassing the limit",
              "timedOut": false,
              "duration": 1395,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/login/LOG10 - Password overpassing the limit.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('admin@email.com');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('yHI436,?H!?iv3pQw:*PO');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field PASSWORD_IN must have a maximum of 20 characters');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include(\"Can't login, please check the fields\");\n});",
              "err": {},
              "uuid": "7e7f9f1a-5917-4979-8fab-8cb827d8a51f",
              "parentUUID": "aec437eb-4b1f-4b9a-8328-6ec12aad28d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50f957d5-4047-4ef2-bccb-23f8647a947e",
            "43661c05-ef62-4f28-b9f8-f8e8d0748a3d",
            "17cbc3bf-2d38-4c7e-a7a9-ccb22b9450a5",
            "d09a2bb6-952e-45eb-989e-b16563092636",
            "aacf6421-da88-4cea-a990-526f94d39da5",
            "68faf106-6f2b-432a-9d33-5bf172141fe9",
            "67556b1f-b82f-48b7-a246-80339059831a",
            "50ce3c54-b805-4971-8b72-722fd08926e3",
            "9b0f49c4-457d-4a7a-9d25-d5ea3cf929d8",
            "7e7f9f1a-5917-4979-8fab-8cb827d8a51f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19885,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "b0336eab-09d6-4d9d-9556-061de3f44450",
          "title": "Create Role Permissions",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\role-permissions\\create-role-permissions.spec.js",
          "file": "\\test\\role-permissions\\create-role-permissions.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Create Role Permissions\"",
              "fullTitle": "Create Role Permissions \"before all\" hook in \"Create Role Permissions\"",
              "timedOut": false,
              "duration": 3009,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id(\"mat-input-0\")).sendKeys(\"ADMIN@EMAIL.COM\");\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"789012\");\nawait driver.findElement(By.className(\"login-button\")).click();\nawait driver.sleep(1000);\nawait driver.get(\"http://localhost:4200/permission\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);",
              "err": {},
              "uuid": "b73ea250-7b0c-4f56-8045-3b6ccf379902",
              "parentUUID": "b0336eab-09d6-4d9d-9556-061de3f44450",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Create Role Permissions\"",
              "fullTitle": "Create Role Permissions \"after all\" hook in \"Create Role Permissions\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "acb5aed5-2e17-422f-961f-c40327b8fe97",
              "parentUUID": "b0336eab-09d6-4d9d-9556-061de3f44450",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Create Role Permissions\"",
              "fullTitle": "Create Role Permissions \"after each\" hook in \"Create Role Permissions\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + \".jpeg\";\ndriver.takeScreenshot().then(function (image) {\n    require(\"fs\").writeFileSync(\n    \"./mochawesome-report/screenshots/role-permissions/\" + imageFileName,\n    image,\n    \"base64\"\n    );\n});\naddContext(this, \"A continuación imagen del resultado de la prueba.\");\naddContext(this, \"./screenshots/role-permissions/\" + imageFileName);",
              "err": {},
              "uuid": "7adc24e5-932b-4b4e-8f38-0834ed0d66e0",
              "parentUUID": "b0336eab-09d6-4d9d-9556-061de3f44450",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "PRC01 - Permission role creation success",
              "fullTitle": "Create Role Permissions PRC01 - Permission role creation success",
              "timedOut": false,
              "duration": 9241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role-permissions/PRC01 - Permission role creation success.jpeg\"\n]",
              "code": "await driver.findElement(By.id(\"mat-select-value-5\")).click();\nawait driver.sleep(3000);\nawait driver.findElement(By.id('mat-option-29')).click();\nawait driver.findElement(By.id(\"mat-select-value-7\")).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id('mat-option-26')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(2000);\nawait driver.wait(until.elementLocated(By.className('success-snackbar')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"PRC01 - Resultado esperado: PermissionRole created successfully\")\n    console.log(\"PRC01 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"PermissionRole created successfully\");\n});",
              "err": {},
              "uuid": "19725874-9db3-4496-a75c-7a52b7924c75",
              "parentUUID": "b0336eab-09d6-4d9d-9556-061de3f44450",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PRC02 - Create permission role lacks role",
              "fullTitle": "Create Role Permissions PRC02 - Create permission role lacks role",
              "timedOut": false,
              "duration": 2288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role-permissions/PRC02 - Create permission role lacks role.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/permission\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-mdc-hint-0'))\n.getText()\n.then(function(txt){\n    console.log(\"PRC02 - Resultado esperado: Field ROLE_ID_IN is required\")\n    console.log(\"PRC02 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_ID_IN is required\");   \n});",
              "err": {},
              "uuid": "20e7003a-ec65-4f57-b3de-ee2d779525a4",
              "parentUUID": "b0336eab-09d6-4d9d-9556-061de3f44450",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PRC03 - Create permission role lacks permission",
              "fullTitle": "Create Role Permissions PRC03 - Create permission role lacks permission",
              "timedOut": false,
              "duration": 2288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role-permissions/PRC03 - Create permission role lacks permission.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/permission\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-mdc-hint-1'))\n.getText()\n.then(function(txt){\n    console.log(\"PRC03 - Resultado esperado: Field PERMISSION_ID_IN is required\")\n    console.log(\"PRC03 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field PERMISSION_ID_IN is required\");   \n});",
              "err": {},
              "uuid": "844c9121-ffae-4735-a318-309244074c69",
              "parentUUID": "b0336eab-09d6-4d9d-9556-061de3f44450",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PRC04 - Create permission role lacks parameters",
              "fullTitle": "Create Role Permissions PRC04 - Create permission role lacks parameters",
              "timedOut": false,
              "duration": 2288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role-permissions/PRC04 - Create permission role lacks parameters.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/permission\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(1000);\nconst roleHint = await driver.findElement(By.className(\"mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted\")).getText();\nconst permissionHint = await driver.findElement(By.id('mat-mdc-hint-1')).getText();\nconsole.log(\"PRC04 - Resultado esperado para PERMISSION_ID_IN: Field PERMISSION_ID_IN is required\");\nconsole.log(\"PRC04 - Resultado obtenido para PERMISSION_ID_IN: \" + permissionHint);\npermissionHint.should.includes(\"Field PERMISSION_ID_IN is required\");\n\nconsole.log(\"PRC04 - Resultado esperado para ROLE_ID_IN: Field ROLE_ID_IN is required\");\nconsole.log(\"PRC04 - Resultado obtenido para ROLE_ID_IN: \" + roleHint);\nroleHint.should.includes(\"Field ROLE_ID_IN is required\");",
              "err": {},
              "uuid": "21276333-3746-4b72-93dc-7da88210cd6d",
              "parentUUID": "b0336eab-09d6-4d9d-9556-061de3f44450",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PRC05 - Create an existing permission role",
              "fullTitle": "Create Role Permissions PRC05 - Create an existing permission role",
              "timedOut": false,
              "duration": 8386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role-permissions/PRC05 - Create an existing permission role.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/permission\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-select-value-5\")).click();\nawait driver.sleep(3000);\nawait driver.findElement(By.id('mat-option-29')).click();\nawait driver.findElement(By.id(\"mat-select-value-7\")).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id('mat-option-26')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('failure-snackbar')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"PRC05 - Resultado esperado: This role already has the entered permission\")\n    console.log(\"PRC05 - Resultado obtenido: \" + txt);\n    txt.should.includes('This role already has the entered permission');\n});",
              "err": {},
              "uuid": "ae1527a0-3be4-4e41-911c-d0ea5796230e",
              "parentUUID": "b0336eab-09d6-4d9d-9556-061de3f44450",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19725874-9db3-4496-a75c-7a52b7924c75",
            "20e7003a-ec65-4f57-b3de-ee2d779525a4",
            "844c9121-ffae-4735-a318-309244074c69",
            "21276333-3746-4b72-93dc-7da88210cd6d",
            "ae1527a0-3be4-4e41-911c-d0ea5796230e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "fb1eb9b2-d2f2-4945-9367-1e6effdfe9c1",
          "title": "Delete Role Permissions",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\role-permissions\\delete-role-permission.spec.js",
          "file": "\\test\\role-permissions\\delete-role-permission.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Delete Role Permissions\"",
              "fullTitle": "Delete Role Permissions \"before all\" hook in \"Delete Role Permissions\"",
              "timedOut": false,
              "duration": 2792,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id(\"mat-input-0\")).sendKeys(\"ADMIN@EMAIL.COM\");\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"789012\");\nawait driver.findElement(By.className(\"login-button\")).click();\nawait driver.sleep(1000);\nawait driver.get(\"http://localhost:4200/permission\");\nawait driver.sleep(1000);",
              "err": {},
              "uuid": "c0124c92-725d-47c4-96b8-6f5c9420ca16",
              "parentUUID": "fb1eb9b2-d2f2-4945-9367-1e6effdfe9c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Delete Role Permissions\"",
              "fullTitle": "Delete Role Permissions \"after all\" hook in \"Delete Role Permissions\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "a01a26dd-ab46-4759-8cd0-ae880ed7fac7",
              "parentUUID": "fb1eb9b2-d2f2-4945-9367-1e6effdfe9c1",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Delete Role Permissions\"",
              "fullTitle": "Delete Role Permissions \"after each\" hook in \"Delete Role Permissions\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + \".jpeg\";\ndriver.takeScreenshot().then(function (image) {\n    require(\"fs\").writeFileSync(\n    \"./mochawesome-report/screenshots/role-permissions/\" + imageFileName,\n    image,\n    \"base64\");\n});\naddContext(this, \"A continuación imagen del resultado de la prueba.\");\naddContext(this, \"./screenshots/role-permissions/\" + imageFileName);",
              "err": {},
              "uuid": "fe70a621-c82e-45a9-8f11-3695e5f883ea",
              "parentUUID": "fb1eb9b2-d2f2-4945-9367-1e6effdfe9c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "PRD01 - Permission role deletion success",
              "fullTitle": "Delete Role Permissions PRD01 - Permission role deletion success",
              "timedOut": false,
              "duration": 4190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role-permissions/PRD01 - Permission role deletion success.jpeg\"\n]",
              "code": "await driver.findElement(By.id('mat-select-value-1')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"mat-icon notranslate user-delete-btn material-icons mat-ligature-font mat-icon-no-color\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"confirm-main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"PRD01 - Resultado esperado: Permission role successfully deleted.\")\n    console.log(\"PRD01 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Permission role successfully deleted.\");\n});",
              "err": {},
              "uuid": "0f1b7ca2-01c7-4f33-91fc-d529a7c3f04e",
              "parentUUID": "fb1eb9b2-d2f2-4945-9367-1e6effdfe9c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f1b7ca2-01c7-4f33-91fc-d529a7c3f04e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4190,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
          "title": "Create Role",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\roles\\create-role.spec.js",
          "file": "\\test\\roles\\create-role.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Create Role\"",
              "fullTitle": "Create Role \"before all\" hook in \"Create Role\"",
              "timedOut": false,
              "duration": 6861,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id(\"mat-input-0\")).sendKeys(\"ADMIN@EMAIL.COM\");\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"789012\");\nawait driver.findElement(By.className(\"login-button\")).click();\nawait driver.sleep(4000);\nawait driver.get(\"http://localhost:4200/role\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(2000);",
              "err": {},
              "uuid": "f8f2ca3d-483b-4881-91be-93407aaae900",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Create Role\"",
              "fullTitle": "Create Role \"after all\" hook in \"Create Role\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "f72c9ae7-e54c-49c1-b20c-92f2bfb578ed",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Create Role\"",
              "fullTitle": "Create Role \"after each\" hook in \"Create Role\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + \".jpeg\";\ndriver.takeScreenshot().then(function (image) {\n    require(\"fs\").writeFileSync(\n    \"./mochawesome-report/screenshots/role/\" + imageFileName,\n    image,\n    \"base64\"\n    );\n});\naddContext(this, \"A continuación imagen del resultado de la prueba.\");\naddContext(this, \"./screenshots/role/\" + imageFileName);",
              "err": {},
              "uuid": "b683889f-419e-416a-a7e7-81289c5b744a",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "RC01 - Role creation success",
              "fullTitle": "Create Role RC01 - Role creation success",
              "timedOut": false,
              "duration": 4172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RC01 - Role creation success.jpeg\"\n]",
              "code": "await driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"ROLE_DUMMY_2\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"Dummyrole2\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(2000);\nawait driver.wait(until.elementLocated(By.className(\"success-snackbar\")), 3000).getText()\n.then(function(txt){\n    console.log(\"RC01 - Resultado esperado: Role created successfully\")\n    console.log(\"RC01 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Role created successfully\");\n});",
              "err": {},
              "uuid": "a94a9de9-09ea-4366-88c5-b1cb5510f64b",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RC02 - Role creation lacks name",
              "fullTitle": "Create Role RC02 - Role creation lacks name",
              "timedOut": false,
              "duration": 5366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RC02 - Role creation lacks name.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"Dummyrole3\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(2000);\nawait driver.wait(until.elementLocated(By.id(\"mat-mdc-hint-0\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RC02 - Resultado esperado: Field ROLE_NAME_IN is required\")\n    console.log(\"RC02 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_NAME_IN is required\");\n});",
              "err": {},
              "uuid": "d367f5b0-2f3f-4234-8a2c-d2d4380945d2",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RC03 - Role creation lacks description",
              "fullTitle": "Create Role RC03 - Role creation lacks description",
              "timedOut": false,
              "duration": 6364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RC03 - Role creation lacks description.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"ROLE_DUMMY_4\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(2000);\nawait driver.wait(until.elementLocated(By.id(\"mat-mdc-hint-0\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RC03 - Resultado esperado: Field ROLE_DESCRIPTION_IN is required\")\n    console.log(\"RC03 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_DESCRIPTION_IN is required\");\n});",
              "err": {},
              "uuid": "2b32da02-9549-453d-bb63-f45655b083e5",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RC04 - Role creation lacks parameters",
              "fullTitle": "Create Role RC04 - Role creation lacks parameters",
              "timedOut": false,
              "duration": 4291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RC04 - Role creation lacks parameters.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(2000);\nconst nameHint = await driver.findElement(By.id(\"mat-mdc-hint-0\")).getText();\nconst descriptionHint = await driver.findElement(By.id(\"mat-mdc-hint-1\")).getText();\nconsole.log(\"RC04 - Resultado esperado: Field ROLE_NAME_IN is required\")\nconsole.log(\"RC04 - Resultado obtenido: \" + nameHint);\nnameHint.should.includes(\"Field ROLE_NAME_IN is required\");\nconsole.log(\"RC04 - Resultado esperado: Field ROLE_DESCRIPTION_IN is required\")\nconsole.log(\"RC04 - Resultado obtenido: \" + descriptionHint);\ndescriptionHint.should.includes(\"Field ROLE_DESCRIPTION_IN is required\");",
              "err": {},
              "uuid": "ae1c2057-7364-4b79-bafc-25f541e8f6ab",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RC05 - Create role only with 2 letters in role name",
              "fullTitle": "Create Role RC05 - Create role only with 2 letters in role name",
              "timedOut": false,
              "duration": 5358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RC05 - Create role only with 2 letters in role name.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"RO\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"Dummyrole3\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(2000);\nawait driver.wait(until.elementLocated(By.id(\"mat-mdc-hint-0\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RC05 - Resultado esperado: Field ROLE_NAME_IN must have at least 3 characters\")\n    console.log(\"RC05 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_NAME_IN must have at least 3 characters\");\n});",
              "err": {},
              "uuid": "97892090-45fd-43ab-af94-e068b0620813",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RC06 - Create role only with 2 letters in role description",
              "fullTitle": "Create Role RC06 - Create role only with 2 letters in role description",
              "timedOut": false,
              "duration": 5393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RC06 - Create role only with 2 letters in role description.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"Dummy_role_4\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"ro\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(2000);\nawait driver.wait(until.elementLocated(By.id(\"mat-mdc-hint-0\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RC06 - Resultado esperado: Field ROLE_DESCRIPTION_IN must have at least 3 characters\")\n    console.log(\"RC06 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_DESCRIPTION_IN must have at least 3 characters\");\n});",
              "err": {},
              "uuid": "332b0393-578e-4627-8a49-9e5fde9b57f1",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RC07 - Create role with 51 letters in role name",
              "fullTitle": "Create Role RC07 - Create role with 51 letters in role name",
              "timedOut": false,
              "duration": 5455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RC07 - Create role with 51 letters in role name.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"ROLE_DUMMY_4ROLE_DUMMY_4ROLE_DUMMY_4ROLE_DUMMY_4ROLE_DUMMY_4\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"Dummyrole3\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(2000);\nawait driver.wait(until.elementLocated(By.id(\"mat-mdc-hint-0\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RC07 - Resultado esperado: Field ROLE_NAME_IN must have a maximum of 50 characters \")\n    console.log(\"RC07 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_NAME_IN must have a maximum of 50 characters\");\n});",
              "err": {},
              "uuid": "7fc9c1e3-90b2-4dca-baf3-75788d7c321a",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RC08 - Create role with 256 letters in role description",
              "fullTitle": "Create Role RC08 - Create role with 256 letters in role description",
              "timedOut": false,
              "duration": 5646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RC08 - Create role with 256 letters in role description.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"Dummy_role_4\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-2\"))\n.sendKeys(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(2000);\nawait driver.wait(until.elementLocated(By.id(\"mat-mdc-hint-0\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RC08 - Resultado esperado: Field ROLE_DESCRIPTION_IN must have a maximum of 255 characters\")\n    console.log(\"RC08 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_DESCRIPTION_IN must have a maximum of 255 characters\");\n});",
              "err": {},
              "uuid": "10f73ab6-e2b4-4c26-9055-66a3e21cecba",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RC09 - Create role with an existing role name",
              "fullTitle": "Create Role RC09 - Create role with an existing role name",
              "timedOut": false,
              "duration": 5433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RC09 - Create role with an existing role name.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.findElement(By.className(\"create-user\")).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"Role_dummy_1\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"Dummyrole3\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className(\"main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\")).click();\nawait driver.sleep(2000);\nawait driver.wait(until.elementLocated(By.className(\"failure-snackbar\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RC09 - Resultado esperado: The role name already exists\")\n    console.log(\"RC09 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"The role name already exists\");\n});",
              "err": {},
              "uuid": "8dc3c374-9d04-4895-b67e-7b5bd77f23f1",
              "parentUUID": "2709d2c4-5054-46bc-8496-bdf73b5b5ede",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a94a9de9-09ea-4366-88c5-b1cb5510f64b",
            "d367f5b0-2f3f-4234-8a2c-d2d4380945d2",
            "2b32da02-9549-453d-bb63-f45655b083e5",
            "ae1c2057-7364-4b79-bafc-25f541e8f6ab",
            "97892090-45fd-43ab-af94-e068b0620813",
            "332b0393-578e-4627-8a49-9e5fde9b57f1",
            "7fc9c1e3-90b2-4dca-baf3-75788d7c321a",
            "10f73ab6-e2b4-4c26-9055-66a3e21cecba",
            "8dc3c374-9d04-4895-b67e-7b5bd77f23f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 47478,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "8a5d2fac-5cd6-4102-8f63-f7d27086df30",
          "title": "Delete Role",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\roles\\delete-role.spec.js",
          "file": "\\test\\roles\\delete-role.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Delete Role\"",
              "fullTitle": "Delete Role \"before all\" hook in \"Delete Role\"",
              "timedOut": false,
              "duration": 6709,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id(\"mat-input-0\")).sendKeys(\"ADMIN@EMAIL.COM\");\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"789012\");\nawait driver.findElement(By.className(\"login-button\")).click();\nawait driver.sleep(4000);\nawait driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(2000);",
              "err": {},
              "uuid": "e37ca491-4d61-4c10-b7f4-dc87bf98d09b",
              "parentUUID": "8a5d2fac-5cd6-4102-8f63-f7d27086df30",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Delete Role\"",
              "fullTitle": "Delete Role \"after all\" hook in \"Delete Role\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "4810be1a-9f18-4892-a8ec-2bba56d5b8eb",
              "parentUUID": "8a5d2fac-5cd6-4102-8f63-f7d27086df30",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Delete Role\"",
              "fullTitle": "Delete Role \"after each\" hook in \"Delete Role\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + \".jpeg\";\ndriver.takeScreenshot().then(function (image) {\n    require(\"fs\").writeFileSync(\n    \"./mochawesome-report/screenshots/role/\" + imageFileName,\n    image,\n    \"base64\"\n    );\n});\naddContext(this, \"A continuación imagen del resultado de la prueba.\");\naddContext(this, \"./screenshots/role/\" + imageFileName);",
              "err": {},
              "uuid": "87753a60-60ad-47e2-bfc4-920ee22b0783",
              "parentUUID": "8a5d2fac-5cd6-4102-8f63-f7d27086df30",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "RD01 - Delete a role sucess",
              "fullTitle": "Delete Role RD01 - Delete a role sucess",
              "timedOut": false,
              "duration": 3114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RD01 - Delete a role sucess.jpeg\"\n]",
              "code": "const roleId = 3;\nconst deleteButtonSelector = `#delete-column-td${roleId} .trashcan-btn`;\nawait driver.wait(until.elementLocated(By.css(deleteButtonSelector)), 5000);\nconst deleteButton = await driver.findElement(By.css(deleteButtonSelector));\nawait deleteButton.click();\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"confirm-main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('success-snackbar')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RD01 - Resultado esperado: Role successfully deleted.\")\n    console.log(\"RD01 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Role successfully deleted.\");\n});",
              "err": {},
              "uuid": "04bc98eb-6e03-4521-98d5-6034fcc95415",
              "parentUUID": "8a5d2fac-5cd6-4102-8f63-f7d27086df30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RD02 - Delete role Admin",
              "fullTitle": "Delete Role RD02 - Delete role Admin",
              "timedOut": false,
              "duration": 4276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RD02 - Delete role Admin.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.css('#delete-column-td1 .trashcan-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"confirm-main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('failure-snackbar')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RD02 - Resultado esperado: Roles with ID 1 and 2 cannot be deleted\")\n    console.log(\"RD02 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Roles with ID 1 and 2 cannot be deleted\");\n});",
              "err": {},
              "uuid": "f8dacdc5-ff12-41e1-b39a-09df253a7e6a",
              "parentUUID": "8a5d2fac-5cd6-4102-8f63-f7d27086df30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RD03 Delete role Player",
              "fullTitle": "Delete Role RD03 Delete role Player",
              "timedOut": false,
              "duration": 4282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/role/RD03 Delete role Player.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.css('#delete-column-td2 .trashcan-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"confirm-main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('failure-snackbar')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RD03 - Resultado esperado: Roles with ID 1 and 2 cannot be deleted\")\n    console.log(\"RD03 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Roles with ID 1 and 2 cannot be deleted\");\n});",
              "err": {},
              "uuid": "73ffe224-f663-48ff-a93d-a249c7d28b9c",
              "parentUUID": "8a5d2fac-5cd6-4102-8f63-f7d27086df30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04bc98eb-6e03-4521-98d5-6034fcc95415",
            "f8dacdc5-ff12-41e1-b39a-09df253a7e6a",
            "73ffe224-f663-48ff-a93d-a249c7d28b9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11672,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "81bdf4f9-25a8-4725-abc0-571d435ff883",
          "title": "Update Role",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\roles\\update-role.spec.js",
          "file": "\\test\\roles\\update-role.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Update Role\"",
              "fullTitle": "Update Role \"before all\" hook in \"Update Role\"",
              "timedOut": false,
              "duration": 6861,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id(\"mat-input-0\")).sendKeys(\"ADMIN@EMAIL.COM\");\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"789012\");\nawait driver.findElement(By.className(\"login-button\")).click();\nawait driver.sleep(4000);\nawait driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(2000);",
              "err": {},
              "uuid": "12f72daf-3a0e-4fc1-96cf-788492993a54",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Update Role\"",
              "fullTitle": "Update Role \"after all\" hook in \"Update Role\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "c54db37c-4058-4738-a17b-63af786589b1",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Update Role\"",
              "fullTitle": "Update Role \"after each\" hook in \"Update Role\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + \".jpeg\";\ndriver.takeScreenshot().then(function (image) {\n    require(\"fs\").writeFileSync(\n    \"./mochawesome-report/screenshots/role/\" + imageFileName,\n    image,\n    \"base64\"\n    );\n});\naddContext(this, \"A continuación imagen del resultado de la prueba.\");\naddContext(this, \"./screenshots/role\" + imageFileName);",
              "err": {},
              "uuid": "d7077aa5-5c40-4b7d-9e0f-6d9339185cc7",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "RU01 - Update a role sucess",
              "fullTitle": "Update Role RU01 - Update a role sucess",
              "timedOut": false,
              "duration": 5201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/roleRU01 - Update a role sucess.jpeg\"\n]",
              "code": "await driver.findElement(By.css('#edit-column-td4 .pen-edit-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"ROLE_CHANGED\");\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"DESCRIPTION_CHANGED\");\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('success-snackbar')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RU01 - Resultado esperado: Role updated\")\n    console.log(\"RU01 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Role updated\");\n});",
              "err": {},
              "uuid": "7e237708-c675-4dcd-95a9-31db99c642b2",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RU02 - Update a role with lacks role name",
              "fullTitle": "Update Role RU02 - Update a role with lacks role name",
              "timedOut": false,
              "duration": 6382,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/roleRU02 - Update a role with lacks role name.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.css('#edit-column-td4 .pen-edit-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"\");\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"DESCRIPTION_CHANGED_1\");\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('success-snackbar')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RU02 - Resultado esperado: Role updated\")\n    console.log(\"RU02 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Role updated\");\n});",
              "err": {},
              "uuid": "ef094fd6-d0c4-45ce-b916-502fbb28d99c",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RU03 - Update a role with lacks role description",
              "fullTitle": "Update Role RU03 - Update a role with lacks role description",
              "timedOut": false,
              "duration": 6321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/roleRU03 - Update a role with lacks role description.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.css('#edit-column-td4 .pen-edit-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"ROLE_CHANGED_1\");\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"\");\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('success-snackbar')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RU03 - Resultado esperado: Role updated\")\n    console.log(\"RU03 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Role updated\");\n});",
              "err": {},
              "uuid": "22546f1a-0b33-455f-8eec-541165b6c831",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RU04 - Update role Admin",
              "fullTitle": "Update Role RU04 - Update role Admin",
              "timedOut": false,
              "duration": 6340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/roleRU04 - Update role Admin.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.css('#edit-column-td1 .pen-edit-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"ROLE_CHANGED_2\");\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"DESCRIPTION_CHANGED_2\");\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('failure-snackbar')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RU04 - Resultado esperado: Roles with ID 1 and 2 cannot be edited\")\n    console.log(\"RU04 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Roles with ID 1 and 2 cannot be edited\");\n});",
              "err": {},
              "uuid": "9ca49032-67cf-457d-874e-6a259932e317",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RU05 - Update role Player",
              "fullTitle": "Update Role RU05 - Update role Player",
              "timedOut": false,
              "duration": 6420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/roleRU05 - Update role Player.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.css('#edit-column-td2 .pen-edit-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"ROLE_CHANGED_3\");\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"DESCRIPTION_CHANGED_3\");\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('failure-snackbar')), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RU05 - Resultado esperado: Roles with ID 1 and 2 cannot be edited\")\n    console.log(\"RU05 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Roles with ID 1 and 2 cannot be edited\");\n});",
              "err": {},
              "uuid": "4113d007-2455-4ac8-ae0c-9c16f6a41b57",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RU06 - update role only with 2 letters on role name",
              "fullTitle": "Update Role RU06 - update role only with 2 letters on role name",
              "timedOut": false,
              "duration": 6405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/roleRU06 - update role only with 2 letters on role name.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.css('#edit-column-td4 .pen-edit-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"RO\");\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"DESCRIPTION_CHANGED_4\");\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id(\"mat-mdc-hint-0\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RU06 - Resultado esperado: Field ROLE_NAME_IN must have at least 3 characters\")\n    console.log(\"RU06 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_NAME_IN must have at least 3 characters\");\n});",
              "err": {},
              "uuid": "ed2288c7-8e4f-4168-b77e-44052f51feab",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RU07 - update role only with 2 letters on role description",
              "fullTitle": "Update Role RU07 - update role only with 2 letters on role description",
              "timedOut": false,
              "duration": 6305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/roleRU07 - update role only with 2 letters on role description.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.css('#edit-column-td4 .pen-edit-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"ROLE_CHANGED_4\");\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"RO\");\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id(\"mat-mdc-hint-0\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RU07 - Resultado esperado: Field ROLE_DESCRIPTION_IN must have at least 3 characters\")\n    console.log(\"RU07 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_DESCRIPTION_IN must have at least 3 characters\");\n});",
              "err": {},
              "uuid": "6c3d5929-f673-4e40-807a-25626185bb76",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RU08 - update role with 50 letters on role name",
              "fullTitle": "Update Role RU08 - update role with 50 letters on role name",
              "timedOut": false,
              "duration": 6487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/roleRU08 - update role with 50 letters on role name.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.css('#edit-column-td4 .pen-edit-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"ROLE_CHANGED_5ROLE_CHANGED_5ROLE_CHANGED_5ROLE_CHANGED_5ROLE_CHANGED_5\");\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"DESCRIPTION_CHANGED_5\");\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id(\"mat-mdc-hint-0\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RU08 - Resultado esperado: Field ROLE_NAME_IN must have a maximum of 50 characters\")\n    console.log(\"RU08 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_NAME_IN must have a maximum of 50 characters\");\n});",
              "err": {},
              "uuid": "a1dd108c-7558-4b76-8330-794ac0550e5a",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RU09 - update role with 256 letters on role description",
              "fullTitle": "Update Role RU09 - update role with 256 letters on role description",
              "timedOut": false,
              "duration": 6593,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/roleRU09 - update role with 256 letters on role description.jpeg\"\n]",
              "code": "await driver.get(\"http://localhost:4200/role\");\nawait driver.sleep(1000);\nawait driver.findElement(By.css('#edit-column-td4 .pen-edit-btn')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id(\"mat-input-1\")).sendKeys(\"ROLE_CHANGED_6\");\nawait driver.findElement(By.id(\"mat-input-2\")).sendKeys(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\nawait driver.sleep(2000);\nawait driver.findElement(By.className(\"main-button\")).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id(\"mat-mdc-hint-0\")), 3000)\n.getText()\n.then(function(txt){\n    console.log(\"RU09 - Resultado esperado: Field ROLE_DESCRIPTION_IN must have a maximum of 255 characters\")\n    console.log(\"RU09 - Resultado obtenido: \" + txt);\n    txt.should.includes(\"Field ROLE_DESCRIPTION_IN must have a maximum of 255 characters\");\n});",
              "err": {},
              "uuid": "04b537d7-7b83-4294-9412-7fbb8ceb0119",
              "parentUUID": "81bdf4f9-25a8-4725-abc0-571d435ff883",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e237708-c675-4dcd-95a9-31db99c642b2",
            "ef094fd6-d0c4-45ce-b916-502fbb28d99c",
            "22546f1a-0b33-455f-8eec-541165b6c831",
            "9ca49032-67cf-457d-874e-6a259932e317",
            "4113d007-2455-4ac8-ae0c-9c16f6a41b57",
            "ed2288c7-8e4f-4168-b77e-44052f51feab",
            "6c3d5929-f673-4e40-807a-25626185bb76",
            "a1dd108c-7558-4b76-8330-794ac0550e5a",
            "04b537d7-7b83-4294-9412-7fbb8ceb0119"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 56454,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
          "title": "Create task",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\task\\create-task.spec.js",
          "file": "\\test\\task\\create-task.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Create task\"",
              "fullTitle": "Create task \"before all\" hook in \"Create task\"",
              "timedOut": false,
              "duration": 1578,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('PLAYER@EMAIL.COM');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('345678');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000);",
              "err": {},
              "uuid": "aa9c18da-9da0-4c7b-90f2-85b3890a4b5d",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Create task\"",
              "fullTitle": "Create task \"before each\" hook in \"Create task\"",
              "timedOut": false,
              "duration": 1204,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/task/list\");\nawait driver.sleep(1000);",
              "err": {},
              "uuid": "ffd9e83e-a714-4a8e-a724-140659110036",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Create task\"",
              "fullTitle": "Create task \"after all\" hook in \"Create task\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "bcb5784b-fbae-442c-b6d9-b70ec4530c8c",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Create task\"",
              "fullTitle": "Create task \"after each\" hook in \"Create task\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + '.jpeg';\ndriver.takeScreenshot().then(\n    function (image) {\n        require('fs').writeFileSync('./mochawesome-report/screenshots/task/' + imageFileName, image, 'base64');\n    }\n)\naddContext(this, 'A continuación imagen del resultado de la prueba.');\naddContext(this, './screenshots/task/' + imageFileName);",
              "err": {},
              "uuid": "30f87d9e-d5b8-4526-86b5-f023f410a3ce",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "TAC01 - Create task success",
              "fullTitle": "Create task TAC01 - Create task success",
              "timedOut": false,
              "duration": 2223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAC01 - Create task success.jpeg\"\n]",
              "code": "await driver.findElement(By.id('add-task-btn')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('New Task Title');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('New Description Task');\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include('Task created successfully');\n});",
              "err": {},
              "uuid": "b7455aa5-659a-431e-bd88-551b9f2ab1e5",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAC02 - Create task lack description",
              "fullTitle": "Create task TAC02 - Create task lack description",
              "timedOut": false,
              "duration": 2138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAC02 - Create task lack description.jpeg\"\n]",
              "code": "await driver.findElement(By.id('add-task-btn')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('New Task Title');\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include('Task created successfully');\n});",
              "err": {},
              "uuid": "7e9cad20-3551-48d5-a94d-ea083748ab80",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAC03 - Create task lack title",
              "fullTitle": "Create task TAC03 - Create task lack title",
              "timedOut": false,
              "duration": 2168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAC03 - Create task lack title.jpeg\"\n]",
              "code": "await driver.findElement(By.id('add-task-btn')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-1')).sendKeys('New Description Task');\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field TITLE_IN is required');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include('Invalid form, please check the required fields');\n});",
              "err": {},
              "uuid": "0b25f7b6-e537-4346-bcb2-56b1eb36ccf3",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAC04 - Create task lack priority",
              "fullTitle": "Create task TAC04 - Create task lack priority",
              "timedOut": false,
              "duration": 2169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAC04 - Create task lack priority.jpeg\"\n]",
              "code": "await driver.findElement(By.id('add-task-btn')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('New Task Title');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('New Description Task');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field PRIORITY_IN is required');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include('Invalid form, please check the required fields');\n});",
              "err": {},
              "uuid": "1f09a840-c15c-4558-9cbf-8a62687a4a73",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAC05 - Create task underpassing the limit of 3 characters in title",
              "fullTitle": "Create task TAC05 - Create task underpassing the limit of 3 characters in title",
              "timedOut": false,
              "duration": 2193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAC05 - Create task underpassing the limit of 3 characters in title.jpeg\"\n]",
              "code": "await driver.findElement(By.id('add-task-btn')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('a');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('New Description Task');\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field TITLE_IN must have at least 3 characters');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include('Invalid form, please check the required fields');\n});",
              "err": {},
              "uuid": "c5c77051-efed-4d53-a15b-5a42b25d2ed7",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAC06 - Create task overpassing the limit of 50 characters in title",
              "fullTitle": "Create task TAC06 - Create task overpassing the limit of 50 characters in title",
              "timedOut": false,
              "duration": 2238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAC06 - Create task overpassing the limit of 50 characters in title.jpeg\"\n]",
              "code": "await driver.findElement(By.id('add-task-btn')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('lorem ipsum dolor sit amet consectetur adipiscing eli');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('New Description Task');\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field TITLE_IN must have a maximum of 50 characters');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include('Invalid form, please check the required fields');\n});",
              "err": {},
              "uuid": "50919045-fba2-4ad2-aa2e-8d47b6c0bdb4",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAC07 - Create task overpassing the limit of 255 characters in description",
              "fullTitle": "Create task TAC07 - Create task overpassing the limit of 255 characters in description",
              "timedOut": false,
              "duration": 2407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAC07 - Create task overpassing the limit of 255 characters in description.jpeg\"\n]",
              "code": "await driver.findElement(By.id('add-task-btn')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('New Task Title');\nawait driver.findElement(By.id('mat-input-1')).sendKeys(\n    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium.34operator'\n    );\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field DESCRIPTION_IN must have a maximum of 255 characters');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include('Invalid form, please check the required fields');\n});\nawait driver.findElement(By.className('cancel-button')).click();",
              "err": {},
              "uuid": "880e9072-0eeb-4ec1-bafb-17572b0ea69a",
              "parentUUID": "8e377d40-e6dc-4bcf-a4b8-e3c3f6f17394",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7455aa5-659a-431e-bd88-551b9f2ab1e5",
            "7e9cad20-3551-48d5-a94d-ea083748ab80",
            "0b25f7b6-e537-4346-bcb2-56b1eb36ccf3",
            "1f09a840-c15c-4558-9cbf-8a62687a4a73",
            "c5c77051-efed-4d53-a15b-5a42b25d2ed7",
            "50919045-fba2-4ad2-aa2e-8d47b6c0bdb4",
            "880e9072-0eeb-4ec1-bafb-17572b0ea69a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15536,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "92cd5220-2c8b-4b7b-8d6d-e026b212b2ed",
          "title": "Delete task",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\task\\delete-task.spec.js",
          "file": "\\test\\task\\delete-task.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Delete task\"",
              "fullTitle": "Delete task \"before all\" hook in \"Delete task\"",
              "timedOut": false,
              "duration": 1590,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('PLAYER@EMAIL.COM');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('345678');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000);",
              "err": {},
              "uuid": "7b666895-564d-4062-8d7c-eacad5c828f9",
              "parentUUID": "92cd5220-2c8b-4b7b-8d6d-e026b212b2ed",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Delete task\"",
              "fullTitle": "Delete task \"before each\" hook in \"Delete task\"",
              "timedOut": false,
              "duration": 1164,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/task/list\");\nawait driver.sleep(1000);",
              "err": {},
              "uuid": "d2d9dd95-4f35-4010-bc8e-122ff11a1ee3",
              "parentUUID": "92cd5220-2c8b-4b7b-8d6d-e026b212b2ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Delete task\"",
              "fullTitle": "Delete task \"after all\" hook in \"Delete task\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "2a7b3021-ab8d-4d22-935f-cf86b73f188b",
              "parentUUID": "92cd5220-2c8b-4b7b-8d6d-e026b212b2ed",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Delete task\"",
              "fullTitle": "Delete task \"after each\" hook in \"Delete task\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + '.jpeg';\ndriver.takeScreenshot().then(\n    function (image) {\n        require('fs').writeFileSync('./mochawesome-report/screenshots/task/' + imageFileName, image, 'base64');\n    }\n)\naddContext(this, 'A continuación imagen del resultado de la prueba.');\naddContext(this, './screenshots/task/' + imageFileName);",
              "err": {},
              "uuid": "ae696654-a39c-4428-a9f0-e242fbd33c19",
              "parentUUID": "92cd5220-2c8b-4b7b-8d6d-e026b212b2ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "TAD01 - Delete task",
              "fullTitle": "Delete task TAD01 - Delete task",
              "timedOut": false,
              "duration": 2096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAD01 - Delete task.jpeg\"\n]",
              "code": "await driver.findElement(By.id('delete-task-btn')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('confirm-main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function(text){\n    text.should.include('Task successfully deleted.');\n});",
              "err": {},
              "uuid": "251f89e2-88e2-471e-a62d-35ed12f22d23",
              "parentUUID": "92cd5220-2c8b-4b7b-8d6d-e026b212b2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAD02 - Delete done task",
              "fullTitle": "Delete task TAD02 - Delete done task",
              "timedOut": false,
              "duration": 3120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAD02 - Delete done task.jpeg\"\n]",
              "code": "await driver.findElement(By.className('mdc-checkbox__native-control')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('delete-task-btn')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('confirm-main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function(text){\n    text.should.include('Task successfully deleted.');\n});",
              "err": {},
              "uuid": "ce03a338-3abe-4117-8927-5caf8440688c",
              "parentUUID": "92cd5220-2c8b-4b7b-8d6d-e026b212b2ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "251f89e2-88e2-471e-a62d-35ed12f22d23",
            "ce03a338-3abe-4117-8927-5caf8440688c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5216,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
          "title": "Update task",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\task\\update-task.spec.js",
          "file": "\\test\\task\\update-task.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Update task\"",
              "fullTitle": "Update task \"before all\" hook in \"Update task\"",
              "timedOut": false,
              "duration": 1576,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('PLAYER@EMAIL.COM');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('345678');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(1000);",
              "err": {},
              "uuid": "4361b6e9-072d-4c06-975b-4efa05ae9bb9",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Update task\"",
              "fullTitle": "Update task \"before each\" hook in \"Update task\"",
              "timedOut": false,
              "duration": 1203,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:4200/task/list\");\nawait driver.sleep(1000);",
              "err": {},
              "uuid": "690aa2de-63f8-4a9a-b091-3b7968ce6c16",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Update task\"",
              "fullTitle": "Update task \"after all\" hook in \"Update task\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "0b2358c2-8cec-4dea-9c50-193545fe3793",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Update task\"",
              "fullTitle": "Update task \"after each\" hook in \"Update task\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + '.jpeg';\ndriver.takeScreenshot().then(\n    function (image) {\n        require('fs').writeFileSync('./mochawesome-report/screenshots/task/' + imageFileName, image, 'base64');\n    }\n)\naddContext(this, 'A continuación imagen del resultado de la prueba.');\naddContext(this, './screenshots/task/' + imageFileName);",
              "err": {},
              "uuid": "2bd56314-337a-4e44-83f9-9d15a16f4de1",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "TAU01 - Update task success",
              "fullTitle": "Update task TAU01 - Update task success",
              "timedOut": false,
              "duration": 2235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAU01 - Update task success.jpeg\"\n]",
              "code": "await driver.findElement(By.id('edit-task-btn7')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('Task Title Updated');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('Updated Description Task');\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include('Task updated successfully');\n});",
              "err": {},
              "uuid": "c60cf7e2-d04f-4f8f-a291-b286a788d02c",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAU02 - Update task lack title",
              "fullTitle": "Update task TAU02 - Update task lack title",
              "timedOut": false,
              "duration": 2156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAU02 - Update task lack title.jpeg\"\n]",
              "code": "await driver.findElement(By.id('edit-task-btn7')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-1')).sendKeys('Updated Description Task');\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include('Task updated successfully');\n});",
              "err": {},
              "uuid": "dfbf5854-5ee3-4ec6-9592-57b31cfb1db9",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAU03 - Update task underpassing the limit of 3 characters in title",
              "fullTitle": "Update task TAU03 - Update task underpassing the limit of 3 characters in title",
              "timedOut": false,
              "duration": 2183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAU03 - Update task underpassing the limit of 3 characters in title.jpeg\"\n]",
              "code": "await driver.findElement(By.id('edit-task-btn7')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('a');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('Updated Description Task');\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field TITLE_IN must have at least 3 characters');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    text.should.include('Invalid form, please check the required fields');\n});",
              "err": {},
              "uuid": "ef4d6326-dfb9-4a66-bf06-329f3b36a6f2",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAU04 - Update task overpassing the limit of 50 characters in title",
              "fullTitle": "Update task TAU04 - Update task overpassing the limit of 50 characters in title",
              "timedOut": false,
              "duration": 2229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAU04 - Update task overpassing the limit of 50 characters in title.jpeg\"\n]",
              "code": "await driver.findElement(By.id('edit-task-btn7')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('lorem ipsum dolor sit amet consectetur adipiscing eli');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('Updated Description Task');\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field TITLE_IN must have a maximum of 50 characters');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text) {\n    console.log(text);\n    text.should.include('Invalid form, please check the required fields');\n});",
              "err": {},
              "uuid": "b2b6b936-e81e-419e-bc62-7dd9d52ce0dd",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAU05 - Update task lack priority",
              "fullTitle": "Update task TAU05 - Update task lack priority",
              "timedOut": false,
              "duration": 2153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAU05 - Update task lack priority.jpeg\"\n]",
              "code": "await driver.findElement(By.id('edit-task-btn7')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('Task Title Updated');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('Updated Description Task');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function (text){\n    text.should.include('Task updated successfully');\n});",
              "err": {},
              "uuid": "ad263f60-92d0-469d-b6fc-ed9a5c51b8c1",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAU06 - Update task lack description",
              "fullTitle": "Update task TAU06 - Update task lack description",
              "timedOut": false,
              "duration": 2145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAU06 - Update task lack description.jpeg\"\n]",
              "code": "await driver.findElement(By.id('edit-task-btn7')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('Task Title Updated');\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function(text){\n    text.should.include('Task updated successfully');\n});",
              "err": {},
              "uuid": "f33c286c-1393-470d-abc4-921b4b8c4caf",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAU07 - Update task overpassing the 255 characters",
              "fullTitle": "Update task TAU07 - Update task overpassing the 255 characters",
              "timedOut": false,
              "duration": 2375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAU07 - Update task overpassing the 255 characters.jpeg\"\n]",
              "code": "await driver.findElement(By.id('edit-task-btn7')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-input-0')).sendKeys('Task Title Updated');\nawait driver.findElement(By.id('mat-input-1')).sendKeys(\n    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium.34operator'\n    );\nawait driver.findElement(By.id('mat-radio-2-input')).click();\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('mat-mdc-hint-0')).getText().then(function (text) {\n    text.should.include('Field DESCRIPTION_IN must have a maximum of 255 characters');\n});\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function(text){\n    text.should.include('Invalid form, please check the required fields');\n});",
              "err": {},
              "uuid": "2b95f0ce-0b66-46c0-8f20-4a8e8d6aa412",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TAU08 - Update task with no change",
              "fullTitle": "Update task TAU08 - Update task with no change",
              "timedOut": false,
              "duration": 4176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/task/TAU08 - Update task with no change.jpeg\"\n]",
              "code": "await driver.findElement(By.id('edit-task-btn7')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('cancel-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.id('edit-task-btn7')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000)\nawait driver.findElement(By.className('mat-mdc-snack-bar-container')).getText().then(function(text){\n    text.should.include('Task not updated: no changes detected');\n});\nawait driver.findElement(By.className('cancel-button')).click();",
              "err": {},
              "uuid": "21bdbeca-d5ea-455a-b598-bfbdb7c5d08b",
              "parentUUID": "5cc8ae68-f63c-482e-a3f0-ed0918246a46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c60cf7e2-d04f-4f8f-a291-b286a788d02c",
            "dfbf5854-5ee3-4ec6-9592-57b31cfb1db9",
            "ef4d6326-dfb9-4a66-bf06-329f3b36a6f2",
            "b2b6b936-e81e-419e-bc62-7dd9d52ce0dd",
            "ad263f60-92d0-469d-b6fc-ed9a5c51b8c1",
            "f33c286c-1393-470d-abc4-921b4b8c4caf",
            "2b95f0ce-0b66-46c0-8f20-4a8e8d6aa412",
            "21bdbeca-d5ea-455a-b598-bfbdb7c5d08b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19652,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "646ccc56-5043-4d1f-9acc-dd5eb6bd9f04",
          "title": "Create User",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\user\\create-user.spec.js",
          "file": "\\test\\user\\create-user.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Create User\"",
              "fullTitle": "Create User \"after all\" hook in \"Create User\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "9330ea0d-b9a4-4c15-9383-856657ebe345",
              "parentUUID": "646ccc56-5043-4d1f-9acc-dd5eb6bd9f04",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Create User\"",
              "fullTitle": "Create User \"after each\" hook in \"Create User\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + '.jpeg';\ndriver.takeScreenshot().then(\n    function(image){\n        require('fs').writeFileSync('./mochawesome-report/screenshots/user/' + imageFileName, image, 'base64');\n    }\n)\naddContext(this, 'A continuación imagen del resultado de la prueba.');\naddContext(this, './screenshots/user/' + imageFileName);",
              "err": {},
              "uuid": "3c230550-0f02-4347-a99c-9e55a4200bbe",
              "parentUUID": "646ccc56-5043-4d1f-9acc-dd5eb6bd9f04",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
              "title": "Register user",
              "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\user\\create-user.spec.js",
              "file": "\\test\\user\\create-user.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Register user\"",
                  "fullTitle": "Create User Register user \"before each\" hook in \"Register user\"",
                  "timedOut": false,
                  "duration": 220,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get(\"http://localhost:4200/register\");",
                  "err": {},
                  "uuid": "69f9cc58-c437-4dfb-9917-48d6a38d1b5e",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "UREG01 - Register user success",
                  "fullTitle": "Create User Register user UREG01 - Register user success",
                  "timedOut": false,
                  "duration": 1292,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG01 - Register user success.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('New Name');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('New Lastname');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('newNick');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('newemail@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('newPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG01 - Resultado esperado: User registered successfully.\")\n        console.log(\"UREG01 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"User registered successfully.\");\n    });",
                  "err": {},
                  "uuid": "9d26f13c-2d36-4d7f-a180-4315fa78fcbe",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG02 - Register user lacks name",
                  "fullTitle": "Create User Register user UREG02 - Register user lacks name",
                  "timedOut": false,
                  "duration": 1209,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG02 - Register user lacks name.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG02 - Resultado esperado: Field NAME_IN is required\")\n        console.log(\"UREG02 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN is required\");\n    });",
                  "err": {},
                  "uuid": "132a8d9b-3ff1-4344-8c75-8073593a370b",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG03 - Register user lacks lastname",
                  "fullTitle": "Create User Register user UREG03 - Register user lacks lastname",
                  "timedOut": false,
                  "duration": 1225,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG03 - Register user lacks lastname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG03 - Resultado esperado: Field LASTNAME_IN is required\")\n        console.log(\"UREG03 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN is required\");\n    });",
                  "err": {},
                  "uuid": "477cd5b3-7bcb-4c8b-a129-87265acdb95c",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG04 - Register user lacks nickname",
                  "fullTitle": "Create User Register user UREG04 - Register user lacks nickname",
                  "timedOut": false,
                  "duration": 1219,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG04 - Register user lacks nickname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG04 - Resultado esperado: Field NICKNAME_IN is required\")\n        console.log(\"UREG04 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN is required\");\n    });",
                  "err": {},
                  "uuid": "fe4bac9c-1c23-4e49-9b0d-0585734f44aa",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG05 - Register user lacks email",
                  "fullTitle": "Create User Register user UREG05 - Register user lacks email",
                  "timedOut": false,
                  "duration": 1209,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG05 - Register user lacks email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG05 - Resultado esperado: Field EMAIL_IN is required\")\n        console.log(\"UREG05 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN is required\");\n    });",
                  "err": {},
                  "uuid": "689a1f51-03b5-4e5e-92f5-b4b5ec4e058e",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG06 - Register user lacks password",
                  "fullTitle": "Create User Register user UREG06 - Register user lacks password",
                  "timedOut": false,
                  "duration": 1204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG06 - Register user lacks password.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG06 - Resultado esperado: Field PASSWORD_IN is required\")\n        console.log(\"UREG06 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field PASSWORD_IN is required\");\n    });",
                  "err": {},
                  "uuid": "45b34657-4999-4c5f-a4a0-994b4572b786",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG07 - Register user under min name",
                  "fullTitle": "Create User Register user UREG07 - Register user under min name",
                  "timedOut": false,
                  "duration": 1235,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG07 - Register user under min name.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('aa');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG07 - Resultado esperado: Field NAME_IN must have at least 3 characters\")\n        console.log(\"UREG07 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "f75263e9-c7e1-4e6b-a091-a6e30e967209",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG08 - Register user under min lastname",
                  "fullTitle": "Create User Register user UREG08 - Register user under min lastname",
                  "timedOut": false,
                  "duration": 1230,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG08 - Register user under min lastname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('aa');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG08 - Resultado esperado: Field LASTNAME_IN must have at least 3 characters\")\n        console.log(\"UREG08 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "67a93497-c328-421a-a28f-61e5161691ad",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG09 - Register user under min nickname",
                  "fullTitle": "Create User Register user UREG09 - Register user under min nickname",
                  "timedOut": false,
                  "duration": 1222,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG09 - Register user under min nickname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('aa');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG09 - Resultado esperado: Field NICKNAME_IN must have at least 3 characters\")\n        console.log(\"UREG09 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "6485c0cc-d5c9-411c-8505-b9fa926d27a0",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG10 - Register user under min email",
                  "fullTitle": "Create User Register user UREG10 - Register user under min email",
                  "timedOut": false,
                  "duration": 1199,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG10 - Register user under min email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('aa');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG10 - Resultado esperado: Field EMAIL_IN is not a valid email\")\n        console.log(\"UREG10 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN is not a valid email\");\n    });",
                  "err": {},
                  "uuid": "3432355d-af10-4ffa-a0a6-2e267558de37",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG11 - Register user under min password",
                  "fullTitle": "Create User Register user UREG11 - Register user under min password",
                  "timedOut": false,
                  "duration": 1217,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG11 - Register user under min password.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('aa');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG11 - Resultado esperado: Field PASSWORD_IN must have at least 8 characters\")\n        console.log(\"UREG11 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field PASSWORD_IN must have at least 8 characters\");\n    });",
                  "err": {},
                  "uuid": "e43fa6ed-64ff-43ac-9442-ee4f4569151f",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG12 - Register user over max name",
                  "fullTitle": "Create User Register user UREG12 - Register user over max name",
                  "timedOut": false,
                  "duration": 1250,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG12 - Register user over max name.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG12 - Resultado esperado: Field NAME_IN must have a maximum of 50 characters\")\n        console.log(\"UREG12 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "381506cf-e348-4e9d-ab76-dee8ce36fa46",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG13 - Register user over max lastname",
                  "fullTitle": "Create User Register user UREG13 - Register user over max lastname",
                  "timedOut": false,
                  "duration": 1240,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG13 - Register user over max lastname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG13 - Resultado esperado: Field LASTNAME_IN must have a maximum of 50 characters\")\n        console.log(\"UREG13 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "aa091a51-83a2-4109-841b-5006d0e645e9",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG14 - Register user over max nickname",
                  "fullTitle": "Create User Register user UREG14 - Register user over max nickname",
                  "timedOut": false,
                  "duration": 1237,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG14 - Register user over max nickname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG14 - Resultado esperado: Field NICKNAME_IN must have a maximum of 50 characters\")\n        console.log(\"UREG14 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "3bb6169e-e1b5-49de-8973-e2c198afa055",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG15 - Register user over max email",
                  "fullTitle": "Create User Register user UREG15 - Register user over max email",
                  "timedOut": false,
                  "duration": 1284,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG15 - Register user over max email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG15 - Resultado esperado: Field EMAIL_IN must have a maximum of 100 characters\")\n        console.log(\"UREG15 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN must have a maximum of 100 characters\");\n    });",
                  "err": {},
                  "uuid": "346969e7-4a68-4638-9a2a-7da3aeb02908",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG16 - Register user over max password",
                  "fullTitle": "Create User Register user UREG16 - Register user over max password",
                  "timedOut": false,
                  "duration": 1237,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG16 - Register user over max password.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG16 - Resultado esperado: Field PASSWORD_IN must have a maximum of 50 characters\")\n        console.log(\"UREG16 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field PASSWORD_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "eb8f8f12-ed65-4759-9f32-c16ca8bb1ee2",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG17 - Register user name invalid",
                  "fullTitle": "Create User Register user UREG17 - Register user name invalid",
                  "timedOut": false,
                  "duration": 3218,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG17 - Register user name invalid.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy2');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(3000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG17 - Resultado esperado: Field NAME_IN can only contain letters and spaces\")\n        console.log(\"UREG17 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN can only contain letters and spaces\");\n    });",
                  "err": {},
                  "uuid": "24645943-e436-44be-8852-441389363901",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG18 - Register user lastname invalid",
                  "fullTitle": "Create User Register user UREG18 - Register user lastname invalid",
                  "timedOut": false,
                  "duration": 1221,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG18 - Register user lastname invalid.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy2');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG18 - Resultado esperado: Field LASTNAME_IN can only contain letters and spaces\")\n        console.log(\"UREG18 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN can only contain letters and spaces\");\n    });",
                  "err": {},
                  "uuid": "bd16c580-14c1-46c5-bd1a-724530adb247",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG19 - Register user nickname invalid",
                  "fullTitle": "Create User Register user UREG19 - Register user nickname invalid",
                  "timedOut": false,
                  "duration": 1222,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG19 - Register user nickname invalid.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('(dummy)');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG19 - Resultado esperado: Field NICKNAME_IN can only contain letters, numbers, dots, hyphens, and underscores\")\n        console.log(\"UREG19 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN can only contain letters, numbers, dots, hyphens, and underscores\");\n    });",
                  "err": {},
                  "uuid": "e3695bd0-458a-41d5-bc98-76cde79f38d3",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG20 - Register user email invalid",
                  "fullTitle": "Create User Register user UREG20 - Register user email invalid",
                  "timedOut": false,
                  "duration": 1222,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG20 - Register user email invalid.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG20 - Resultado esperado: Field EMAIL_IN is not a valid email\")\n        console.log(\"UREG20 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN is not a valid email\");\n    });",
                  "err": {},
                  "uuid": "0ac5c2d8-9963-4699-adf4-a68df5195c82",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG21 - Register user existing nickname",
                  "fullTitle": "Create User Register user UREG21 - Register user existing nickname",
                  "timedOut": false,
                  "duration": 1235,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG21 - Register user existing nickname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('newNick');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG21 - Resultado esperado: The user's nickname already exists\")\n        console.log(\"UREG21 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"The user's nickname already exists\");\n    });",
                  "err": {},
                  "uuid": "67f005cb-91b4-4d6c-8344-a37e250e15e3",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "UREG22 - Register user existing email",
                  "fullTitle": "Create User Register user UREG22 - Register user existing email",
                  "timedOut": false,
                  "duration": 1264,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UREG22 - Register user existing email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-0')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('newemail@email.com');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"UREG22 - Resultado esperado: The user's email already exists\")\n        console.log(\"UREG22 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"The user's email already exists\");\n    });",
                  "err": {},
                  "uuid": "27a5cd59-0a63-45de-a976-8bb96efbddaf",
                  "parentUUID": "fc2de790-8a4b-4f2f-b6b9-9d6718a58cbb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d26f13c-2d36-4d7f-a180-4315fa78fcbe",
                "132a8d9b-3ff1-4344-8c75-8073593a370b",
                "477cd5b3-7bcb-4c8b-a129-87265acdb95c",
                "fe4bac9c-1c23-4e49-9b0d-0585734f44aa",
                "689a1f51-03b5-4e5e-92f5-b4b5ec4e058e",
                "45b34657-4999-4c5f-a4a0-994b4572b786",
                "f75263e9-c7e1-4e6b-a091-a6e30e967209",
                "67a93497-c328-421a-a28f-61e5161691ad",
                "6485c0cc-d5c9-411c-8505-b9fa926d27a0",
                "3432355d-af10-4ffa-a0a6-2e267558de37",
                "e43fa6ed-64ff-43ac-9442-ee4f4569151f",
                "381506cf-e348-4e9d-ab76-dee8ce36fa46",
                "aa091a51-83a2-4109-841b-5006d0e645e9",
                "3bb6169e-e1b5-49de-8973-e2c198afa055",
                "346969e7-4a68-4638-9a2a-7da3aeb02908",
                "eb8f8f12-ed65-4759-9f32-c16ca8bb1ee2",
                "24645943-e436-44be-8852-441389363901",
                "bd16c580-14c1-46c5-bd1a-724530adb247",
                "e3695bd0-458a-41d5-bc98-76cde79f38d3",
                "0ac5c2d8-9963-4699-adf4-a68df5195c82",
                "67f005cb-91b4-4d6c-8344-a37e250e15e3",
                "27a5cd59-0a63-45de-a976-8bb96efbddaf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 29091,
              "root": false,
              "rootEmpty": false,
              "_timeout": 0
            },
            {
              "uuid": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
              "title": "Create user admin",
              "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\user\\create-user.spec.js",
              "file": "\\test\\user\\create-user.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Create user admin\"",
                  "fullTitle": "Create User Create user admin \"before all\" hook in \"Create user admin\"",
                  "timedOut": false,
                  "duration": 2412,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('ADMIN@EMAIL.COM');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('789012');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(2000);",
                  "err": {},
                  "uuid": "48082ed6-ed4e-4ec2-a78e-273860183f44",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook in \"Create user admin\"",
                  "fullTitle": "Create User Create user admin \"before each\" hook in \"Create user admin\"",
                  "timedOut": false,
                  "duration": 4375,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(2000);\nawait driver.findElement(By.className('create-user')).click();\nawait driver.sleep(2000);",
                  "err": {},
                  "uuid": "5a443fae-2ea7-4266-87c1-3e4c929a7a8c",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "USC01 - Admin user creation success",
                  "fullTitle": "Create User Create user admin USC01 - Admin user creation success",
                  "timedOut": false,
                  "duration": 3380,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC01 - Admin user creation success.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('New Name admin');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('New Lastname Admin');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('newNickAdmin');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('newemailadmin@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('newPassword');\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC01 - Resultado esperado: User registered successfully.\")\n        console.log(\"USC01 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"User registered successfully.\");\n    });",
                  "err": {},
                  "uuid": "981f1a73-60b8-4733-8e9d-7b824c796784",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC02 - Admin register user lacks name",
                  "fullTitle": "Create User Create user admin USC02 - Admin register user lacks name",
                  "timedOut": false,
                  "duration": 3295,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC02 - Admin register user lacks name.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPass');\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC02 - Resultado esperado: Field NAME_IN is required\")\n        console.log(\"USC02 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN is required\");\n    });",
                  "err": {},
                  "uuid": "a29c0122-b845-4fb8-a50e-fe5ce81eada0",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC03 - Admin register user lacks lastname",
                  "fullTitle": "Create User Create user admin USC03 - Admin register user lacks lastname",
                  "timedOut": false,
                  "duration": 3322,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC03 - Admin register user lacks lastname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPass');\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC03 - Resultado esperado:  Field LASTNAME_IN is required\")\n        console.log(\"USC03 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN is required\");\n    });",
                  "err": {},
                  "uuid": "51463d4d-f48e-44de-baa6-a0b1f60f8ccf",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC04 - Admin register user lacks nickname",
                  "fullTitle": "Create User Create user admin USC04 - Admin register user lacks nickname",
                  "timedOut": false,
                  "duration": 3280,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC04 - Admin register user lacks nickname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPass');\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC04 - Resultado esperado: Field NICKNAME_IN is required\")\n        console.log(\"USC04 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN is required\");\n    });",
                  "err": {},
                  "uuid": "5bbb92f3-544d-4ac6-8b52-07da9939e26f",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC05 - Admin register user lacks email",
                  "fullTitle": "Create User Create user admin USC05 - Admin register user lacks email",
                  "timedOut": false,
                  "duration": 3288,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC05 - Admin register user lacks email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPass');\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC05 - Resultado esperado: Field EMAIL_IN is required\")\n        console.log(\"USC05 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN is required\");\n    });",
                  "err": {},
                  "uuid": "a82de1fa-a9e8-43a6-8d8a-b26b18e75bad",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC06 - Admin register user lacks password",
                  "fullTitle": "Create User Create user admin USC06 - Admin register user lacks password",
                  "timedOut": false,
                  "duration": 3293,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC06 - Admin register user lacks password.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('');\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC06 - Resultado esperado: Field PASSWORD_IN is required\")\n        console.log(\"USC06 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field PASSWORD_IN is required\");\n    });",
                  "err": {},
                  "uuid": "3a7ff4ee-8012-4142-a596-10bb023914f6",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC07 - Admin register user lacks role",
                  "fullTitle": "Create User Create user admin USC07 - Admin register user lacks role",
                  "timedOut": false,
                  "duration": 1231,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC07 - Admin register user lacks role.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummmmyy1');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC07 - Resultado esperado:  Field ID_ROLE_IN is required\")\n        console.log(\"USC07 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field ID_ROLE_IN is required\");\n    });",
                  "err": {},
                  "uuid": "d3f25386-5f5d-4cd0-9561-b5801d789f07",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC08 - Admin register user under min name",
                  "fullTitle": "Create User Create user admin USC08 - Admin register user under min name",
                  "timedOut": false,
                  "duration": 3363,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC08 - Admin register user under min name.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('du');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummmmyy1');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC08 - Resultado esperado: Field NAME_IN must have at least 3 characters\")\n        console.log(\"USC08 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "05ec22b5-ed5d-43f6-ad29-ae01ac59a242",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC09 - Admin register user under min lastname",
                  "fullTitle": "Create User Create user admin USC09 - Admin register user under min lastname",
                  "timedOut": false,
                  "duration": 3318,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC09 - Admin register user under min lastname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('du');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummmmyy1');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC09 - Resultado esperado: Field LASTNAME_IN must have at least 3 characters\")\n        console.log(\"USC09 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "96f98690-000e-4267-afb4-c410c0cbdace",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC10 - Admin register user under min nickname",
                  "fullTitle": "Create User Create user admin USC10 - Admin register user under min nickname",
                  "timedOut": false,
                  "duration": 3310,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC10 - Admin register user under min nickname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('du');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummmmyy1');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC10 - Resultado esperado: Field NICKNAME_IN must have at least 3 characters\")\n        console.log(\"USC10 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "42efe526-639f-4720-983f-c9cd33b2ca58",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC11 - Admin register user under min email",
                  "fullTitle": "Create User Create user admin USC11 - Admin register user under min email",
                  "timedOut": false,
                  "duration": 3376,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC11 - Admin register user under min email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('aa');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummmmyy1');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC11 - Resultado esperado: Field EMAIL_IN is not a valid email\")\n        console.log(\"USC11 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN is not a valid email\");\n    });",
                  "err": {},
                  "uuid": "4e8743ee-d3a0-4dfb-87b9-61b73f0d49c3",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC12 - Admin register user under min password",
                  "fullTitle": "Create User Create user admin USC12 - Admin register user under min password",
                  "timedOut": false,
                  "duration": 3385,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC12 - Admin register user under min password.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('aa');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC12 - Resultado esperado: Field PASSWORD_IN must have at least 8 characters\")\n        console.log(\"USC12 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field PASSWORD_IN must have at least 8 characters\");\n    });",
                  "err": {},
                  "uuid": "d739da10-6f08-4f73-95c7-9c29fd4d4c18",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC13 - Admin register user over max name",
                  "fullTitle": "Create User Create user admin USC13 - Admin register user over max name",
                  "timedOut": false,
                  "duration": 3490,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC13 - Admin register user over max name.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC13 - Resultado esperado: Field NAME_IN must have a maximum of 50 characters\")\n        console.log(\"USC13 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "7bd92688-4c8a-4ee5-b8e7-b7205f9a23ce",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC14 - Admin register user over max lastname",
                  "fullTitle": "Create User Create user admin USC14 - Admin register user over max lastname",
                  "timedOut": false,
                  "duration": 3426,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC14 - Admin register user over max lastname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC13 - Resultado esperado: Field LASTNAME_IN must have a maximum of 50 characters\")\n        console.log(\"USC13 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "2e45c322-07e3-4371-b3c0-93abf2420f6d",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC15 - Admin register user over max nickname",
                  "fullTitle": "Create User Create user admin USC15 - Admin register user over max nickname",
                  "timedOut": false,
                  "duration": 3484,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC15 - Admin register user over max nickname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC15 - Resultado esperado: Field NICKNAME_IN must have a maximum of 50 characters\")\n        console.log(\"USC15 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "b9374ea7-e646-4a19-bcf6-fd8f4edef490",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC16 - Admin register user over max email",
                  "fullTitle": "Create User Create user admin USC16 - Admin register user over max email",
                  "timedOut": false,
                  "duration": 3473,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC16 - Admin register user over max email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC16 - Resultado esperado: Field EMAIL_IN must have a maximum of 100 characters\")\n        console.log(\"USC16 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN must have a maximum of 100 characters\");\n    });",
                  "err": {},
                  "uuid": "a86f020c-8e2b-49df-85a2-479ba1d9f457",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC17 - Admin register user over max email",
                  "fullTitle": "Create User Create user admin USC17 - Admin register user over max email",
                  "timedOut": false,
                  "duration": 3458,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC17 - Admin register user over max email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC17 - Resultado esperado: Field PASSWORD_IN must have a maximum of 50 characters\")\n        console.log(\"USC17 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field PASSWORD_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "8a3b4d9f-5c20-49b6-88fe-f42b80723eaa",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC18 - Admin register user invalid name",
                  "fullTitle": "Create User Create user admin USC18 - Admin register user invalid name",
                  "timedOut": false,
                  "duration": 3365,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC18 - Admin register user invalid name.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy2');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC18 - Resultado esperado: Field NAME_IN can only contain letters and spaces\")\n        console.log(\"USC18 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN can only contain letters and spaces\");\n    });",
                  "err": {},
                  "uuid": "22878e3f-a99d-4a2d-8aaf-b2a580dd01b7",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC19 - Admin register user invalid lastname",
                  "fullTitle": "Create User Create user admin USC19 - Admin register user invalid lastname",
                  "timedOut": false,
                  "duration": 3400,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC19 - Admin register user invalid lastname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy2');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC19 - Resultado esperado: Field LASTNAME_IN can only contain letters and spaces\")\n        console.log(\"USC19 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN can only contain letters and spaces\");\n    });",
                  "err": {},
                  "uuid": "c6a3ea5f-ff92-4ecc-9fc5-99201f1d6b23",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC20 - Admin register user invalid nickname",
                  "fullTitle": "Create User Create user admin USC20 - Admin register user invalid nickname",
                  "timedOut": false,
                  "duration": 3392,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC20 - Admin register user invalid nickname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('(dummy)');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC20 - Resultado esperado: Field NICKNAME_IN can only contain letters, numbers, dots, hyphens, and underscores\")\n        console.log(\"USC20 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN can only contain letters, numbers, dots, hyphens, and underscores\");\n    });",
                  "err": {},
                  "uuid": "d0323e30-2efc-494e-a139-9ebaeb710af2",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC21 - Admin register user invalid email",
                  "fullTitle": "Create User Create user admin USC21 - Admin register user invalid email",
                  "timedOut": false,
                  "duration": 3425,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC21 - Admin register user invalid email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.dummy');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC21 - Resultado esperado: Field EMAIL_IN is not a valid email\")\n        console.log(\"USC21 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN is not a valid email\");\n    });",
                  "err": {},
                  "uuid": "36708f63-0ff9-4b5b-a626-d4ffdb5e0a7c",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC22 - Admin register user existing nickname",
                  "fullTitle": "Create User Create user admin USC22 - Admin register user existing nickname",
                  "timedOut": false,
                  "duration": 3426,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC22 - Admin register user existing nickname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('newNick');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC22 - Resultado esperado: The user's nickname already exists\")\n        console.log(\"USC22 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"The user's nickname already exists\");\n    });",
                  "err": {},
                  "uuid": "5ec2b906-a143-4d5d-a696-600f1d1461b7",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USC23 - Admin register user existing email",
                  "fullTitle": "Create User Create user admin USC23 - Admin register user existing email",
                  "timedOut": false,
                  "duration": 3414,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USC23 - Admin register user existing email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy');\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummy9');\nawait driver.findElement(By.id('mat-input-4')).sendKeys('newEmail@email.com');\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.findElement(By.id('mat-select-value-3')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-4')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USC23 - Resultado esperado: The user's email already exists\")\n        console.log(\"USC23 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"The user's email already exists\");\n    });",
                  "err": {},
                  "uuid": "6f0aebb7-f5a8-4d05-88e1-9323e980cb3c",
                  "parentUUID": "a529f1fe-a7f1-422b-bf04-a0583230a7f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "981f1a73-60b8-4733-8e9d-7b824c796784",
                "a29c0122-b845-4fb8-a50e-fe5ce81eada0",
                "51463d4d-f48e-44de-baa6-a0b1f60f8ccf",
                "5bbb92f3-544d-4ac6-8b52-07da9939e26f",
                "a82de1fa-a9e8-43a6-8d8a-b26b18e75bad",
                "3a7ff4ee-8012-4142-a596-10bb023914f6",
                "d3f25386-5f5d-4cd0-9561-b5801d789f07",
                "05ec22b5-ed5d-43f6-ad29-ae01ac59a242",
                "96f98690-000e-4267-afb4-c410c0cbdace",
                "42efe526-639f-4720-983f-c9cd33b2ca58",
                "4e8743ee-d3a0-4dfb-87b9-61b73f0d49c3",
                "d739da10-6f08-4f73-95c7-9c29fd4d4c18",
                "7bd92688-4c8a-4ee5-b8e7-b7205f9a23ce",
                "2e45c322-07e3-4371-b3c0-93abf2420f6d",
                "b9374ea7-e646-4a19-bcf6-fd8f4edef490",
                "a86f020c-8e2b-49df-85a2-479ba1d9f457",
                "8a3b4d9f-5c20-49b6-88fe-f42b80723eaa",
                "22878e3f-a99d-4a2d-8aaf-b2a580dd01b7",
                "c6a3ea5f-ff92-4ecc-9fc5-99201f1d6b23",
                "d0323e30-2efc-494e-a139-9ebaeb710af2",
                "36708f63-0ff9-4b5b-a626-d4ffdb5e0a7c",
                "5ec2b906-a143-4d5d-a696-600f1d1461b7",
                "6f0aebb7-f5a8-4d05-88e1-9323e980cb3c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 75594,
              "root": false,
              "rootEmpty": false,
              "_timeout": 0
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "0ca72539-2c8e-48b7-9fed-aa9bcca19c8f",
          "title": "Delete User",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\user\\delete-user.spec.js",
          "file": "\\test\\user\\delete-user.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Delete User\"",
              "fullTitle": "Delete User \"after all\" hook in \"Delete User\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "f512b55a-6ea8-417d-b181-7cfb09cb892b",
              "parentUUID": "0ca72539-2c8e-48b7-9fed-aa9bcca19c8f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Delete User\"",
              "fullTitle": "Delete User \"after each\" hook in \"Delete User\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + '.jpeg';\ndriver.takeScreenshot().then(\n    function(image){\n        require('fs').writeFileSync('./mochawesome-report/screenshots/user/' + imageFileName, image, 'base64');\n    }\n)\naddContext(this, 'A continuación imagen del resultado de la prueba.');\naddContext(this, './screenshots/user/' + imageFileName);",
              "err": {},
              "uuid": "43a335b5-5c2d-4300-8c68-cb2004c830e8",
              "parentUUID": "0ca72539-2c8e-48b7-9fed-aa9bcca19c8f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "2104b7b7-8db0-492e-bcc2-99a2c1c3d8db",
              "title": "Delete user admin",
              "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\user\\delete-user.spec.js",
              "file": "\\test\\user\\delete-user.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Delete user admin\"",
                  "fullTitle": "Delete User Delete user admin \"before all\" hook in \"Delete user admin\"",
                  "timedOut": false,
                  "duration": 4917,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('ADMIN@EMAIL.COM');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('789012');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);",
                  "err": {},
                  "uuid": "09b01e3e-7f23-4f94-aea2-9446b26459fc",
                  "parentUUID": "2104b7b7-8db0-492e-bcc2-99a2c1c3d8db",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook in \"Delete user admin\"",
                  "fullTitle": "Delete User Delete user admin \"before each\" hook in \"Delete user admin\"",
                  "timedOut": false,
                  "duration": 2092,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "delete_btns = await driver.findElements(By.className(\"mat-icon notranslate trashcan-btn material-icons mat-ligature-font mat-icon-no-color\"));\nawait driver.sleep(2000);",
                  "err": {},
                  "uuid": "018bf2e1-15c3-4b25-8dcd-b2137d4d56b1",
                  "parentUUID": "2104b7b7-8db0-492e-bcc2-99a2c1c3d8db",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "USD01 - Admin delete existing user",
                  "fullTitle": "Delete User Delete user admin USD01 - Admin delete existing user",
                  "timedOut": false,
                  "duration": 2119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USD01 - Admin delete existing user.jpeg\"\n]",
                  "code": "await delete_btns[2].click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('confirm-main-button')), 2000)\nawait driver.findElement(By.className('confirm-main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USD01 - Resultado esperado: User successfully deleted.\")\n        console.log(\"USD01 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"User successfully deleted.\");\n    });",
                  "err": {},
                  "uuid": "72581daf-fd7e-4741-93ae-fb5607c4ada1",
                  "parentUUID": "2104b7b7-8db0-492e-bcc2-99a2c1c3d8db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USD02 - Admin delete already existing user",
                  "fullTitle": "Delete User Delete user admin USD02 - Admin delete already existing user",
                  "timedOut": false,
                  "duration": 2080,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USD02 - Admin delete already existing user.jpeg\"\n]",
                  "code": "await delete_btns[2].click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('confirm-main-button')), 2000)\nawait driver.findElement(By.className('confirm-main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USD02 - Resultado esperado: User ID not found\")\n        console.log(\"USD02 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"User ID not found\");\n    });",
                  "err": {},
                  "uuid": "1dc05952-c47c-445d-982f-36ae775e2295",
                  "parentUUID": "2104b7b7-8db0-492e-bcc2-99a2c1c3d8db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USD03 - Admin delete user with ID 1",
                  "fullTitle": "Delete User Delete user admin USD03 - Admin delete user with ID 1",
                  "timedOut": false,
                  "duration": 2071,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USD03 - Admin delete user with ID 1.jpeg\"\n]",
                  "code": "await delete_btns[0].click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('confirm-main-button')), 2000)\nawait driver.findElement(By.className('confirm-main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USD03 - Resultado esperado: Cannot delete the user with ID 1 or 2\")\n        console.log(\"USD03 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Cannot delete the user with ID 1 or 2\");\n    });",
                  "err": {},
                  "uuid": "5967c436-2d44-4e66-8843-d6b2281bf0a1",
                  "parentUUID": "2104b7b7-8db0-492e-bcc2-99a2c1c3d8db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USD04 - Admin delete user from settings",
                  "fullTitle": "Delete User Delete user admin USD04 - Admin delete user from settings",
                  "timedOut": false,
                  "duration": 2150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USD04 - Admin delete user from settings.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.className('setting-change-del')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USD04 - Resultado esperado: Admin account cannot be deleted\")\n        console.log(\"USD04 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Admin account cannot be deleted\");\n    });",
                  "err": {},
                  "uuid": "4c1bc68e-fd6b-4b27-ab57-bd9d1e12aefd",
                  "parentUUID": "2104b7b7-8db0-492e-bcc2-99a2c1c3d8db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "72581daf-fd7e-4741-93ae-fb5607c4ada1",
                "1dc05952-c47c-445d-982f-36ae775e2295",
                "5967c436-2d44-4e66-8843-d6b2281bf0a1",
                "4c1bc68e-fd6b-4b27-ab57-bd9d1e12aefd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8420,
              "root": false,
              "rootEmpty": false,
              "_timeout": 0
            },
            {
              "uuid": "31641c68-d972-4aaf-abe1-a7412dfd9929",
              "title": "Delete user from player settings",
              "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\user\\delete-user.spec.js",
              "file": "\\test\\user\\delete-user.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Delete user from player settings\"",
                  "fullTitle": "Delete User Delete user from player settings \"before all\" hook in \"Delete user from player settings\"",
                  "timedOut": false,
                  "duration": 4176,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.findElement(By.id('logout')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('confirm-main-button')).click();\nawait driver.sleep(3000);",
                  "err": {},
                  "uuid": "fb834059-c8a7-4b34-ac4c-92002e9a7188",
                  "parentUUID": "31641c68-d972-4aaf-abe1-a7412dfd9929",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before all\" hook in \"Delete user from player settings\"",
                  "fullTitle": "Delete User Delete user from player settings \"before all\" hook in \"Delete user from player settings\"",
                  "timedOut": false,
                  "duration": 4404,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newemail@email.com');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummyPassword');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);",
                  "err": {},
                  "uuid": "5c08396c-b2eb-406a-8047-1e1d35f502b9",
                  "parentUUID": "31641c68-d972-4aaf-abe1-a7412dfd9929",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "UDP01 - Player delete user from settings",
                  "fullTitle": "Delete User Delete user from player settings UDP01 - Player delete user from settings",
                  "timedOut": false,
                  "duration": 2119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/UDP01 - Player delete user from settings.jpeg\"\n]",
                  "code": "await driver.findElement(By.className('setting-change-del')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('confirm-main-button')), 2000)\nawait driver.findElement(By.className('confirm-main-button')).click();\nawait driver.sleep(1000);",
                  "err": {},
                  "uuid": "ada5d4af-aac8-45aa-a552-34799fc1f7c3",
                  "parentUUID": "31641c68-d972-4aaf-abe1-a7412dfd9929",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ada5d4af-aac8-45aa-a552-34799fc1f7c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2119,
              "root": false,
              "rootEmpty": false,
              "_timeout": 0
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "5a384bda-e5b9-4cd1-a5e8-6abc859c610c",
          "title": "Update User",
          "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\user\\update-user.spec.js",
          "file": "\\test\\user\\update-user.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Update User\"",
              "fullTitle": "Update User \"after all\" hook in \"Update User\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "6467c600-2179-4b93-8220-8709d624679e",
              "parentUUID": "5a384bda-e5b9-4cd1-a5e8-6abc859c610c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Update User\"",
              "fullTitle": "Update User \"after each\" hook in \"Update User\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let imageFileName = this.currentTest.title + '.jpeg';\ndriver.takeScreenshot().then(\n    function(image){\n        require('fs').writeFileSync('./mochawesome-report/screenshots/user/' + imageFileName, image, 'base64');\n    }\n)\naddContext(this, 'A continuación imagen del resultado de la prueba.');\naddContext(this, './screenshots/user/' + imageFileName);",
              "err": {},
              "uuid": "76510492-1166-4407-8c50-67cdb8a21f81",
              "parentUUID": "5a384bda-e5b9-4cd1-a5e8-6abc859c610c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "11285120-6c8b-4a61-af0e-50a67f1251dc",
              "title": "Update user from admin view",
              "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\user\\update-user.spec.js",
              "file": "\\test\\user\\update-user.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Update user from admin view\"",
                  "fullTitle": "Update User Update user from admin view \"before all\" hook in \"Update user from admin view\"",
                  "timedOut": false,
                  "duration": 5091,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get(\"http://localhost:4200/login\");\nawait driver.findElement(By.id('mat-input-0')).sendKeys('ADMIN@EMAIL.COM');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('789012');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();",
                  "err": {},
                  "uuid": "b903478d-bd90-491b-ae42-666c61c6099f",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "USU01 - Update user name success",
                  "fullTitle": "Update User Update user from admin view USU01 - Update user name success",
                  "timedOut": false,
                  "duration": 1128,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU01 - Update user name success.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('New Name Admin');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU01 - Resultado esperado: User updated successfully\")\n        console.log(\"USU01 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"User updated successfully\");\n    });",
                  "err": {},
                  "uuid": "25e9592e-d9b3-4682-b997-a01b6410f89e",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU02 - Update user lastname success",
                  "fullTitle": "Update User Update user from admin view USU02 - Update user lastname success",
                  "timedOut": false,
                  "duration": 1213,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU02 - Update user lastname success.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-2')).sendKeys('New Lastname Admin');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU02 - Resultado esperado: User updated successfully\")\n        console.log(\"USU02 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"User updated successfully\");\n    });",
                  "err": {},
                  "uuid": "595ad2f9-e5a2-4825-8959-acb5f10505c2",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU03 - Update user nickname success",
                  "fullTitle": "Update User Update user from admin view USU03 - Update user nickname success",
                  "timedOut": false,
                  "duration": 1235,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU03 - Update user nickname success.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-3')).sendKeys('USERDUMMYTWOUPDATE');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU03 - Resultado esperado: User updated successfully\")\n        console.log(\"USU03 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"User updated successfully\");\n    });",
                  "err": {},
                  "uuid": "8a3898e4-cabf-4344-89f1-f5f3968c903b",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU04 - Update user email success",
                  "fullTitle": "Update User Update user from admin view USU04 - Update user email success",
                  "timedOut": false,
                  "duration": 1209,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU04 - Update user email success.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-4')).sendKeys('USERDUMMYTWOUPDATE@email.com');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU04 - Resultado esperado: User updated successfully\")\n        console.log(\"USU04 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"User updated successfully\");\n    });",
                  "err": {},
                  "uuid": "b38bbc4a-f0ab-44a5-b1d8-6bfc08f4fdf0",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU05 - Update user password success",
                  "fullTitle": "Update User Update user from admin view USU05 - Update user password success",
                  "timedOut": false,
                  "duration": 1188,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU05 - Update user password success.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-5')).sendKeys('newPasswordAdmin');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU05 - Resultado esperado: User updated successfully\")\n        console.log(\"USU05 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"User updated successfully\");\n    });",
                  "err": {},
                  "uuid": "1ea2885d-bc26-4c0b-9890-f5aa21a373d3",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU06 - Update user role success",
                  "fullTitle": "Update User Update user from admin view USU06 - Update user role success",
                  "timedOut": false,
                  "duration": 2185,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU06 - Update user role success.jpeg\"\n]",
                  "code": "await driver.findElement(By.className('mat-mdc-text-field-wrapper mdc-text-field ng-tns-c1205077789-9 mdc-text-field--filled')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-option-3')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU06 - Resultado esperado: User updated successfully\")\n        console.log(\"USU06 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"User updated successfully\");\n    });",
                  "err": {},
                  "uuid": "74bb4e19-e28a-4e3b-a90d-12be5ed4e293",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU07 - Update user under min name",
                  "fullTitle": "Update User Update user from admin view USU07 - Update user under min name",
                  "timedOut": false,
                  "duration": 1175,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU07 - Update user under min name.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-1')).sendKeys('aa');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU07 - Resultado esperado: Field NAME_IN must have at least 3 characters\")\n        console.log(\"USU07 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "5d41dd19-22cf-40fb-94b1-6c9dce3f761a",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU08 - Update user under min lastname",
                  "fullTitle": "Update User Update user from admin view USU08 - Update user under min lastname",
                  "timedOut": false,
                  "duration": 1186,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU08 - Update user under min lastname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-2')).sendKeys('aa');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-1')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU08 - Resultado esperado: Field LASTNAME_IN must have at least 3 characters\")\n        console.log(\"USU08 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "624f7f85-48a6-4bcf-bc05-26b84751af42",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU09 - Update user under min nickname",
                  "fullTitle": "Update User Update user from admin view USU09 - Update user under min nickname",
                  "timedOut": false,
                  "duration": 1176,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU09 - Update user under min nickname.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-3')).sendKeys('aa');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-2')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU09 - Resultado esperado: Field NICKNAME_IN must have at least 3 characters\")\n        console.log(\"USU09 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "a0778b85-19b7-49b2-8d2b-32167dc92d74",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU10 - Update user under min email",
                  "fullTitle": "Update User Update user from admin view USU10 - Update user under min email",
                  "timedOut": false,
                  "duration": 1162,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU10 - Update user under min email.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-4')).sendKeys('aa');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-3')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU10 - Resultado esperado: Field EMAIL_IN must have at least 5 characters\")\n        console.log(\"USU10 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN must have at least 5 characters\");\n    });",
                  "err": {},
                  "uuid": "364cb330-2dbe-4bff-b6d2-19f8216f685b",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU11 - Update user under min password",
                  "fullTitle": "Update User Update user from admin view USU11 - Update user under min password",
                  "timedOut": false,
                  "duration": 1171,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU11 - Update user under min password.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('mat-input-5')).sendKeys('aa');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-4')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU11 - Resultado esperado: Field PASSWORD_IN must have at least 8 characters\")\n        console.log(\"USU11 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field PASSWORD_IN must have at least 8 characters\");\n    });",
                  "err": {},
                  "uuid": "ea48b982-87f0-42d7-8f43-94c42e12eaa7",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU12 - Update user over max name",
                  "fullTitle": "Update User Update user from admin view USU12 - Update user over max name",
                  "timedOut": false,
                  "duration": 5440,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU12 - Update user over max name.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.wait(until.elementLocated(By.id('mat-input-1')), 3000).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.id('mat-mdc-hint-0')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU12 - Resultado esperado: Field NAME_IN must have a maximum of 50 characters\")\n        console.log(\"USU12 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "9e206904-99f0-4855-b840-a91c4edac0ea",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU13 - Update user over max lastname",
                  "fullTitle": "Update User Update user from admin view USU13 - Update user over max lastname",
                  "timedOut": false,
                  "duration": 5443,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU13 - Update user over max lastname.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU13 - Resultado esperado: Field LASTNAME_IN must have a maximum of 50 characters\")\n        console.log(\"USU13 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "ba88f4b9-c63b-4217-bfc8-9fff0bff5231",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU14 - Update user over max nickname",
                  "fullTitle": "Update User Update user from admin view USU14 - Update user over max nickname",
                  "timedOut": false,
                  "duration": 5423,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU14 - Update user over max nickname.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.findElement(By.id('mat-input-3')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU14 - Resultado esperado: Field NICKNAME_IN must have a maximum of 50 characters\")\n        console.log(\"USU14 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "f9970830-a6a8-40dd-95e8-07a4ef79d370",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU15 - Update user over max nickname",
                  "fullTitle": "Update User Update user from admin view USU15 - Update user over max nickname",
                  "timedOut": false,
                  "duration": 5471,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU15 - Update user over max nickname.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy@email.com');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU15 - Resultado esperado: Field EMAIL_IN must have a maximum of 100 characters\")\n        console.log(\"USU15 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN must have a maximum of 100 characters\");\n    });",
                  "err": {},
                  "uuid": "8a59d8a2-a597-42d8-a58d-463c407dc910",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU16 - Update user over max nickname",
                  "fullTitle": "Update User Update user from admin view USU16 - Update user over max nickname",
                  "timedOut": false,
                  "duration": 5442,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU16 - Update user over max nickname.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.findElement(By.id('mat-input-5')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyPass');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU16 - Resultado esperado: Field PASSWORD_IN must have a maximum of 50 characters\")\n        console.log(\"USU16 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field PASSWORD_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "7f7e0fd6-3f7c-47f6-9ea4-2cc730fb9c13",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU17 - Update user name invalid",
                  "fullTitle": "Update User Update user from admin view USU17 - Update user name invalid",
                  "timedOut": false,
                  "duration": 5351,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU17 - Update user name invalid.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummy2');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU17 - Resultado esperado: Field NAME_IN can only contain letters and spaces\")\n        console.log(\"USU17 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NAME_IN can only contain letters and spaces\");\n    });",
                  "err": {},
                  "uuid": "23c94624-79b6-4d6b-9ff8-f40abc1d5519",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU18 - Update user lastname invalid",
                  "fullTitle": "Update User Update user from admin view USU18 - Update user lastname invalid",
                  "timedOut": false,
                  "duration": 5343,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU18 - Update user lastname invalid.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummy2');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU18 - Resultado esperado: Field LASTNAME_IN can only contain letters and spaces\")\n        console.log(\"USU18 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field LASTNAME_IN can only contain letters and spaces\");\n    });",
                  "err": {},
                  "uuid": "b24a9713-ad10-40fe-83f2-ff01f6b33eb9",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU19 - Update user nickname invalid",
                  "fullTitle": "Update User Update user from admin view USU19 - Update user nickname invalid",
                  "timedOut": false,
                  "duration": 5292,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU19 - Update user nickname invalid.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.findElement(By.id('mat-input-3')).sendKeys('(dummy)');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU19 - Resultado esperado: Field NICKNAME_IN can only contain letters, numbers, dots, hyphens, and underscores\")\n        console.log(\"USU19 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NICKNAME_IN can only contain letters, numbers, dots, hyphens, and underscores\");\n    });",
                  "err": {},
                  "uuid": "d4b8c758-fef0-4fa1-90a0-b7141aa2cc42",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU20 - Update user email invalid",
                  "fullTitle": "Update User Update user from admin view USU20 - Update user email invalid",
                  "timedOut": false,
                  "duration": 5332,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU20 - Update user email invalid.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.findElement(By.id('mat-input-4')).sendKeys('dummy@email.dummy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU20 - Resultado esperado: Field EMAIL_IN is not a valid email\")\n        console.log(\"USU20 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field EMAIL_IN is not a valid email\");\n    });",
                  "err": {},
                  "uuid": "d93d36a5-124e-40ab-af9e-163141c32468",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU21 - Update user existing nickname",
                  "fullTitle": "Update User Update user from admin view USU21 - Update user existing nickname",
                  "timedOut": false,
                  "duration": 7338,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU21 - Update user existing nickname.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id('mat-input-3')).sendKeys('ADMINNICKNAME');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU21 - Resultado esperado: The user's nickname already exists\")\n        console.log(\"USU21 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"The user's nickname already exists\");\n    });",
                  "err": {},
                  "uuid": "59ff9081-9f08-4508-ab08-4fee1f682cb6",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU22 - Update user existing email",
                  "fullTitle": "Update User Update user from admin view USU22 - Update user existing email",
                  "timedOut": false,
                  "duration": 7361,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU22 - Update user existing email.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-3')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id('mat-input-4')).sendKeys('ADMIN@EMAIL.COM');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU22 - Resultado esperado: The user's email already exists\")\n        console.log(\"USU22 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"The user's email already exists\");\n    });",
                  "err": {},
                  "uuid": "10eb4fd8-0ede-417b-9867-643f34c76d50",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU23 - Update user can not modify user",
                  "fullTitle": "Update User Update user from admin view USU23 - Update user can not modify user",
                  "timedOut": false,
                  "duration": 7406,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU23 - Update user can not modify user.jpeg\"\n]",
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('edit-column-td-2')).click();\nawait driver.sleep(2000);\nawait driver.findElement(By.id('mat-input-3')).sendKeys('newDummyNick');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU23 - Resultado esperado: Cannot modify the user with ID 1 and/or 2\")\n        console.log(\"USU23 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Cannot modify the user with ID 1 and/or 2\");\n    });",
                  "err": {},
                  "uuid": "c61c50c6-f88f-45d7-9876-b9084cd4590f",
                  "parentUUID": "11285120-6c8b-4a61-af0e-50a67f1251dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25e9592e-d9b3-4682-b997-a01b6410f89e",
                "595ad2f9-e5a2-4825-8959-acb5f10505c2",
                "8a3898e4-cabf-4344-89f1-f5f3968c903b",
                "b38bbc4a-f0ab-44a5-b1d8-6bfc08f4fdf0",
                "1ea2885d-bc26-4c0b-9890-f5aa21a373d3",
                "74bb4e19-e28a-4e3b-a90d-12be5ed4e293",
                "5d41dd19-22cf-40fb-94b1-6c9dce3f761a",
                "624f7f85-48a6-4bcf-bc05-26b84751af42",
                "a0778b85-19b7-49b2-8d2b-32167dc92d74",
                "364cb330-2dbe-4bff-b6d2-19f8216f685b",
                "ea48b982-87f0-42d7-8f43-94c42e12eaa7",
                "9e206904-99f0-4855-b840-a91c4edac0ea",
                "ba88f4b9-c63b-4217-bfc8-9fff0bff5231",
                "f9970830-a6a8-40dd-95e8-07a4ef79d370",
                "8a59d8a2-a597-42d8-a58d-463c407dc910",
                "7f7e0fd6-3f7c-47f6-9ea4-2cc730fb9c13",
                "23c94624-79b6-4d6b-9ff8-f40abc1d5519",
                "b24a9713-ad10-40fe-83f2-ff01f6b33eb9",
                "d4b8c758-fef0-4fa1-90a0-b7141aa2cc42",
                "d93d36a5-124e-40ab-af9e-163141c32468",
                "59ff9081-9f08-4508-ab08-4fee1f682cb6",
                "10eb4fd8-0ede-417b-9867-643f34c76d50",
                "c61c50c6-f88f-45d7-9876-b9084cd4590f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 84670,
              "root": false,
              "rootEmpty": false,
              "_timeout": 0
            },
            {
              "uuid": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
              "title": "Update user from user view",
              "fullFile": "C:\\Users\\gohan\\Escritorio\\CAPSTONE\\WEB\\listify-test\\listify-tests\\test\\user\\update-user.spec.js",
              "file": "\\test\\user\\update-user.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Update user from user view\"",
                  "fullTitle": "Update User Update user from user view \"before all\" hook in \"Update user from user view\"",
                  "timedOut": false,
                  "duration": 10534,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/user\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('logout')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('confirm-main-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('USERDUMMYTWO@email.com');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('USERDUMMYTWO');\nawait driver.findElement(By.className('login-button')).click();\nawait driver.sleep(3000);\nawait driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);",
                  "err": {},
                  "uuid": "faefa329-7f90-4ca1-ab77-781a950570c7",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "USU24 - Update user nickname as user success",
                  "fullTitle": "Update User Update user from user view USU24 - Update user nickname as user success",
                  "timedOut": false,
                  "duration": 2423,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU24 - Update user nickname as user success.jpeg\"\n]",
                  "code": "await driver.findElement(By.id('nick')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('USERDUMMYTWO');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('USERDUMMYTWONICKNAME');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('confirm-main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU24 - Resultado esperado: Nick updated successfully\")\n        console.log(\"USU24 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Nick updated successfully\");\n    });",
                  "err": {},
                  "uuid": "511ba460-6c96-4097-8e3f-51876b20109d",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU25 - Update user nickname as user lacks old nickname field",
                  "fullTitle": "Update User Update user from user view USU25 - Update user nickname as user lacks old nickname field",
                  "timedOut": false,
                  "duration": 2292,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU25 - Update user nickname as user lacks old nickname field.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('nick')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-1')).sendKeys('settingsUpdatedNick');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU25 - Resultado esperado: Field OLD_NICKNAME_IN is required\")\n        console.log(\"USU25 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field OLD_NICKNAME_IN is required\");\n    });",
                  "err": {},
                  "uuid": "a0ef8f1a-4eae-4b4d-89be-9c55d4f94c8c",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU26 - Update user nickname as user lacks new nickname field",
                  "fullTitle": "Update User Update user from user view USU26 - Update user nickname as user lacks new nickname field",
                  "timedOut": false,
                  "duration": 2276,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU26 - Update user nickname as user lacks new nickname field.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('nick')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newNicknameAdmin');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU26 - Resultado esperado: Field NEW_NICKNAME_IN is required\")\n        console.log(\"USU26 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NEW_NICKNAME_IN is required\");\n    });",
                  "err": {},
                  "uuid": "d36628ac-0e20-4b0f-a742-c29813856525",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU27 - Update user nickname as user invalid old nickname",
                  "fullTitle": "Update User Update user from user view USU27 - Update user nickname as user invalid old nickname",
                  "timedOut": false,
                  "duration": 2322,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU27 - Update user nickname as user invalid old nickname.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('nick')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newNicknameAdmin!');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('settingsUpdateNickname');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU27 - Resultado esperado: Field OLD_NICKNAME_IN can only contain letters, numbers, dots, hyphens, and underscores\")\n        console.log(\"USU27 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field OLD_NICKNAME_IN can only contain letters, numbers, dots, hyphens, and underscores\");\n    });",
                  "err": {},
                  "uuid": "e9c3e054-685b-4cbe-ad26-e4765af6143e",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU28 - Update user nickname as user invalid new nickname",
                  "fullTitle": "Update User Update user from user view USU28 - Update user nickname as user invalid new nickname",
                  "timedOut": false,
                  "duration": 2314,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU28 - Update user nickname as user invalid new nickname.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('nick')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newNicknameAdmin');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('settingsUpdateNickname!');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU28 - Resultado esperado: Field NEW_NICKNAME_IN can only contain letters, numbers, dots, hyphens, and underscores\")\n        console.log(\"USU28 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NEW_NICKNAME_IN can only contain letters, numbers, dots, hyphens, and underscores\");\n    });",
                  "err": {},
                  "uuid": "7fa2dd8b-a5b0-4ac0-9957-384a34150224",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU29 - Update user nickname as user under min oldNickname",
                  "fullTitle": "Update User Update user from user view USU29 - Update user nickname as user under min oldNickname",
                  "timedOut": false,
                  "duration": 2304,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU29 - Update user nickname as user under min oldNickname.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('nick')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('aa');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('settingsUpdateNickname');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU29 - Resultado esperado: Field OLD_NICKNAME_IN must have at least 3 characters\")\n        console.log(\"USU29 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field OLD_NICKNAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "25f64e75-20e5-45d3-b89e-81f78d3fabce",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU30 - Update user nickname as user under min newNickname",
                  "fullTitle": "Update User Update user from user view USU30 - Update user nickname as user under min newNickname",
                  "timedOut": false,
                  "duration": 2339,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU30 - Update user nickname as user under min newNickname.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('nick')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newNicknameAdmin');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('aa');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU30 - Resultado esperado: Field NEW_NICKNAME_IN must have at least 3 characters\")\n        console.log(\"USU30 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NEW_NICKNAME_IN must have at least 3 characters\");\n    });",
                  "err": {},
                  "uuid": "00b88497-66ec-438f-b1a9-a4238fa39091",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU31 - Update user nickname as user over max oldNickname",
                  "fullTitle": "Update User Update user from user view USU31 - Update user nickname as user over max oldNickname",
                  "timedOut": false,
                  "duration": 2359,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU31 - Update user nickname as user over max oldNickname.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('nick')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('settingsUpdateNickname');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU31 - Resultado esperado: Field OLD_NICKNAME_IN must have a maximum of 50 characters\")\n        console.log(\"USU31 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field OLD_NICKNAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "d42fcbd3-0302-4a72-ac17-cec1269c693c",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU32 - Update user nickname as user over max newNickname",
                  "fullTitle": "Update User Update user from user view USU32 - Update user nickname as user over max newNickname",
                  "timedOut": false,
                  "duration": 2354,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU32 - Update user nickname as user over max newNickname.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('nick')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newNicknameAdmin');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU32 - Resultado esperado: Field NEW_NICKNAME_IN must have a maximum of 50 characters\")\n        console.log(\"USU32 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NEW_NICKNAME_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "537cee1a-82c9-4d4f-8c0f-362051dd4421",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU33 - Update user nickname as user nickname already exists",
                  "fullTitle": "Update User Update user from user view USU33 - Update user nickname as user nickname already exists",
                  "timedOut": false,
                  "duration": 3642,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU33 - Update user nickname as user nickname already exists.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('nick')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('USERDUMMYTWONICKNAME');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('ADMINNICKNAME');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('confirm-main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU33 - Resultado esperado: Nick not updated: The user's nickname already exists\")\n        console.log(\"USU33 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Nick not updated: The user's nickname already exists\");\n    });",
                  "err": {},
                  "uuid": "f43b1494-7864-4c26-9770-b418495496b0",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU34 - Update user password as user success",
                  "fullTitle": "Update User Update user from user view USU34 - Update user password as user success",
                  "timedOut": false,
                  "duration": 3679,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU34 - Update user password as user success.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('pass')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('USERDUMMYTWO');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('newPasswordSettings');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('newPasswordSettings');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.className('confirm-main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-snack-bar-container')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU34 - Resultado esperado: Password updated successfully\")\n        console.log(\"USU34 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Password updated successfully\");\n    });",
                  "err": {},
                  "uuid": "42455099-6601-45a6-9df8-b975c5cdfe44",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU35 - Update user password as user lacks old password field",
                  "fullTitle": "Update User Update user from user view USU35 - Update user password as user lacks old password field",
                  "timedOut": false,
                  "duration": 2383,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU35 - Update user password as user lacks old password field.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('pass')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-1')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU35 - Resultado esperado: Field OLD_PASSWORD_IN is required\")\n        console.log(\"USU35 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field OLD_PASSWORD_IN is required\");\n    });",
                  "err": {},
                  "uuid": "c8a630ca-0627-4a24-9d47-9408ea148f9d",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU36 - Update user password as user lacks new password field",
                  "fullTitle": "Update User Update user from user view USU36 - Update user password as user lacks new password field",
                  "timedOut": false,
                  "duration": 2389,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU36 - Update user password as user lacks new password field.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('pass')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newPasswordSettings');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU36 - Resultado esperado: Field NEW_PASSWORD_IN is required\")\n        console.log(\"USU36 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NEW_PASSWORD_IN is required\");\n    });",
                  "err": {},
                  "uuid": "4ea38fc1-cadc-4784-99b6-133107cee57d",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU37 - Update user password as user lacks confirm password field",
                  "fullTitle": "Update User Update user from user view USU37 - Update user password as user lacks confirm password field",
                  "timedOut": false,
                  "duration": 2334,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU37 - Update user password as user lacks confirm password field.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('pass')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newPasswordSettings');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU37 - Resultado esperado: Field CONFIRM_PASSWORD_IN is required\")\n        console.log(\"USU37 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field CONFIRM_PASSWORD_IN is required\");\n    });",
                  "err": {},
                  "uuid": "4b66a60e-9532-4187-9c83-e6de3c01615f",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU38 - Update user password as user under min old password",
                  "fullTitle": "Update User Update user from user view USU38 - Update user password as user under min old password",
                  "timedOut": false,
                  "duration": 2399,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU38 - Update user password as user under min old password.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('pass')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('aa');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU38 - Resultado esperado: Field OLD_PASSWORD_IN must have at least 8 characters\")\n        console.log(\"USU38 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field OLD_PASSWORD_IN must have at least 8 characters\");\n    });",
                  "err": {},
                  "uuid": "5081aaf0-d7d2-4887-b322-99baa1914934",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU39 - Update user password as user over max old password",
                  "fullTitle": "Update User Update user from user view USU39 - Update user password as user over max old password",
                  "timedOut": false,
                  "duration": 2413,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU39 - Update user password as user over max old password.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('pass')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU39 - Resultado esperado: Field OLD_PASSWORD_IN must have a maximum of 50 characters\")\n        console.log(\"USU39 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field OLD_PASSWORD_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "587b6b7d-fcb8-4a86-aa2e-d780e1ce4ce0",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU40 - Update user password as user under min new password",
                  "fullTitle": "Update User Update user from user view USU40 - Update user password as user under min new password",
                  "timedOut": false,
                  "duration": 2397,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU40 - Update user password as user under min new password.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('pass')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newPasswordSettings');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('aa');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU40 - Resultado esperado: Field NEW_PASSWORD_IN must have at least 8 characters\")\n        console.log(\"USU40 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NEW_PASSWORD_IN must have at least 8 characters\");\n    });",
                  "err": {},
                  "uuid": "c4357f15-588a-4476-9640-bdfb18936c26",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU41 - Update user password as user over max new password",
                  "fullTitle": "Update User Update user from user view USU41 - Update user password as user over max new password",
                  "timedOut": false,
                  "duration": 2407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU41 - Update user password as user over max new password.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('pass')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newPasswordSettings');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU41 - Resultado esperado: Field NEW_PASSWORD_IN must have a maximum of 50 characters\")\n        console.log(\"USU41 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field NEW_PASSWORD_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "66138439-f78e-416f-8e40-9a3142a8b1ee",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU42 - Update user password as user under min confirm password",
                  "fullTitle": "Update User Update user from user view USU42 - Update user password as user under min confirm password",
                  "timedOut": false,
                  "duration": 2345,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU42 - Update user password as user under min confirm password.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('pass')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newPasswordSettings');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('aa');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU42 - Resultado esperado: Field CONFIRM_PASSWORD_IN must have at least 8 characters\")\n        console.log(\"USU42 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field CONFIRM_PASSWORD_IN must have at least 8 characters\");\n    });",
                  "err": {},
                  "uuid": "934d5130-2080-4d95-98dd-c47e8e600545",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "USU43 - Update user password as user over max confirm password",
                  "fullTitle": "Update User Update user from user view USU43 - Update user password as user over max confirm password",
                  "timedOut": false,
                  "duration": 2382,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  \"A continuación imagen del resultado de la prueba.\",\n  \"./screenshots/user/USU43 - Update user password as user over max confirm password.jpeg\"\n]",
                  "code": "await driver.get(\"http://localhost:4200/settings\");\nawait driver.sleep(1000);\nawait driver.findElement(By.id('pass')).click();\nawait driver.sleep(1000);\nawait driver.findElement(By.id('mat-input-0')).sendKeys('newPasswordSettings');\nawait driver.findElement(By.id('mat-input-1')).sendKeys('newPasswordSettingsDummy');\nawait driver.findElement(By.id('mat-input-2')).sendKeys('dummyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy');\nawait driver.findElement(By.className('main-button')).click();\nawait driver.wait(until.elementLocated(By.className('mat-mdc-form-field-hint mat-mdc-form-field-bottom-align hint ng-star-inserted')), 2000)\n    .getText()\n    .then(function(txt){\n        console.log(\"USU43 - Resultado esperado: Field CONFIRM_PASSWORD_IN must have a maximum of 50 characters\")\n        console.log(\"USU43 - Resultado obtenido: \" + txt);\n        txt.should.includes(\"Field CONFIRM_PASSWORD_IN must have a maximum of 50 characters\");\n    });",
                  "err": {},
                  "uuid": "6beab77a-c09f-4e02-938f-7939f2a65faf",
                  "parentUUID": "c4ba6e8e-1dfb-41a4-9990-92c6cd0d0bfe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "511ba460-6c96-4097-8e3f-51876b20109d",
                "a0ef8f1a-4eae-4b4d-89be-9c55d4f94c8c",
                "d36628ac-0e20-4b0f-a742-c29813856525",
                "e9c3e054-685b-4cbe-ad26-e4765af6143e",
                "7fa2dd8b-a5b0-4ac0-9957-384a34150224",
                "25f64e75-20e5-45d3-b89e-81f78d3fabce",
                "00b88497-66ec-438f-b1a9-a4238fa39091",
                "d42fcbd3-0302-4a72-ac17-cec1269c693c",
                "537cee1a-82c9-4d4f-8c0f-362051dd4421",
                "f43b1494-7864-4c26-9770-b418495496b0",
                "42455099-6601-45a6-9df8-b975c5cdfe44",
                "c8a630ca-0627-4a24-9d47-9408ea148f9d",
                "4ea38fc1-cadc-4784-99b6-133107cee57d",
                "4b66a60e-9532-4187-9c83-e6de3c01615f",
                "5081aaf0-d7d2-4887-b322-99baa1914934",
                "587b6b7d-fcb8-4a86-aa2e-d780e1ce4ce0",
                "c4357f15-588a-4476-9640-bdfb18936c26",
                "66138439-f78e-416f-8e40-9a3142a8b1ee",
                "934d5130-2080-4d95-98dd-c47e8e600545",
                "6beab77a-c09f-4e02-938f-7939f2a65faf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 49753,
              "root": false,
              "rootEmpty": false,
              "_timeout": 0
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}