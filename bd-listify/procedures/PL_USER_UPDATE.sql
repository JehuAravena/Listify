USE BD_LISTIFY;
DROP PROCEDURE IF EXISTS PL_USER_UPDATE;
DELIMITER $$
CREATE PROCEDURE PL_USER_UPDATE (
    IN ID_USER_IN INT,
    IN NAME_IN VARCHAR(50),
    IN NICKNAME_IN VARCHAR(50),
    IN LASTNAME_IN VARCHAR(50),
    IN EMAIL_IN VARCHAR(50),
    IN PASSWORD_IN VARCHAR(50),
    IN ID_ROLE_IN INT,
    OUT STATUS_OUT INT,
    OUT ERROR_CODE_OUT VARCHAR(50),
    OUT ERROR_MESSAGE_OUT VARCHAR(200)
)

LABEL:BEGIN
    DECLARE P1 VARCHAR(100);
    DECLARE P2 VARCHAR(100);
    DECLARE RC INT;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS CONDITION 1
        P1 = RETURNED_SQLSTATE, P2 = MESSAGE_TEXT;
        SET ERROR_CODE_OUT = 'PL-USU-07';
        SET ERROR_MESSAGE_OUT = CONCAT(CONCAT('SQLSTATE: ',P1),CONCAT(' MESSAGE: ',P2));
        ROLLBACK;
    END;
    IF ID_USER_IN IS NULL OR ID_USER_IN = 0 THEN 
        SET ERROR_CODE_OUT = 'PL_USU_01';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_USU_01' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;
    IF NOT EXISTS (SELECT * FROM USERS WHERE US_ID_USER = ID_USER_IN) THEN
        SET ERROR_CODE_OUT = 'PL_USU_02';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_USU_02' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;
    IF NICKNAME_IN IS NOT NULL THEN
        IF EXISTS (SELECT * FROM USERS WHERE US_NICKNAME = NICKNAME_IN AND US_ID_USER != ID_USER_IN) THEN
            SET ERROR_CODE_OUT = 'PL_USU_03';
            SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_USU_03' INTO ERROR_MESSAGE_OUT;
            LEAVE LABEL;
        END IF;
    END IF;
    IF EMAIL_IN IS NOT NULL THEN
        IF EXISTS (SELECT * FROM USERS WHERE US_EMAIL = EMAIL_IN AND US_ID_USER != ID_USER_IN) THEN
            SET ERROR_CODE_OUT = 'PL_USU_04';
            SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_USU_04' INTO ERROR_MESSAGE_OUT;
            LEAVE LABEL;
        END IF;
    END IF;
    IF ID_ROLE_IN IS NOT NULL THEN
        IF NOT EXISTS (SELECT * FROM ROLES WHERE RO_ID_ROLE = ID_ROLE_IN) THEN
            SET ERROR_CODE_OUT = 'PL_USU_05';
            SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_USU_05' INTO ERROR_MESSAGE_OUT;
            LEAVE LABEL;
        END IF;
    END IF;
    IF ID_USER_IN = 1 OR ID_USER_IN = 2 THEN
        SET ERROR_CODE_OUT = 'PL_USU_06';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_USU_06' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;
    START TRANSACTION;
        UPDATE USERS
        SET
        US_NAME = COALESCE(NAME_IN, US_NAME),
        US_NICKNAME = COALESCE(NICKNAME_IN, US_NICKNAME),
        US_LASTNAME = COALESCE(LASTNAME_IN, US_LASTNAME),
        US_EMAIL = COALESCE(EMAIL_IN, US_EMAIL),
        US_PASSWORD = COALESCE(PASSWORD_IN, US_PASSWORD),
        US_ID_ROLE = COALESCE(ID_ROLE_IN, US_ID_ROLE)
        WHERE US_ID_USER = ID_USER_IN;
        SELECT ROW_COUNT() INTO RC;
    COMMIT;
    IF RC > 0 THEN
        SET STATUS_OUT = 1;
    ELSE
        SET STATUS_OUT = 0;
    END IF;
END$$
DELIMITER ;