USE BD_LISTIFY;
DROP PROCEDURE IF EXISTS PL_USER_DELETE;
DELIMITER $$
CREATE PROCEDURE PL_USER_DELETE (
    IN ID_USER_IN INT,
    OUT STATUS_OUT INT,
    OUT ERROR_CODE_OUT VARCHAR(50),
    OUT ERROR_MESSAGE_OUT VARCHAR(200)
)

LABEL:BEGIN
    DECLARE P1 VARCHAR(100);
    DECLARE P2 VARCHAR(100);
    DECLARE RC INT;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS CONDITION 1
        P1 = RETURNED_SQLSTATE, P2 = MESSAGE_TEXT;
        SET ERROR_CODE_OUT = 'PL-USD-04';
        SET ERROR_MESSAGE_OUT = CONCAT(CONCAT('SQLSTATE: ',P1),CONCAT('MESSAGE: ',P2));
        ROLLBACK;
    END;
    IF ID_USER_IN IS NULL OR ID_USER_IN = 0 THEN
        SET ERROR_CODE_OUT = 'PL_USD_01';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_USD_01' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;
    IF NOT EXISTS (SELECT * FROM USERS WHERE US_ID_USER = ID_USER_IN AND US_ACTIVE = 1) THEN
        SET ERROR_CODE_OUT = 'PL_USD_02';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_USD_02' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;
    IF ID_USER_IN = 1 OR ID_USER_IN = 2 THEN
        SET ERROR_CODE_OUT = 'PL_USD_03';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_USD_03' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;
    START TRANSACTION;
        UPDATE USERS
        SET 
        US_ACTIVE = 0 
        WHERE US_ID_USER = ID_USER_IN;   
        SELECT ROW_COUNT() INTO RC; 
    COMMIT;
    IF RC > 0 THEN
        SET STATUS_OUT = 1;
    ELSE
        SET STATUS_OUT = 0;
    END IF;
END$$
DELIMITER ;