USE BD_LISTIFY;

DROP PROCEDURE IF EXISTS PL_ROLE_PERMISSION_CREATION;
DELIMITER $$

CREATE PROCEDURE PL_ROLE_PERMISSION_CREATION (
    IN ROLE_ID_IN INT,
    IN PERMISSION_ID_IN INT,
    OUT ID_RESULT_OUT INT,
    OUT ERROR_CODE_OUT VARCHAR(50),
    OUT ERROR_MESSAGE_OUT VARCHAR(200)
)

LABEL: BEGIN
    DECLARE P1 VARCHAR(100);
    DECLARE P2 VARCHAR(100);

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS CONDITION 1
        P1 = RETURNED_SQLSTATE, P2 = MESSAGE_TEXT;
        SET ERROR_CODE_OUT = 'PL-PRC-06';
        SET ERROR_MESSAGE_OUT = CONCAT(CONCAT('SQLSTATE: ',P1),CONCAT(' MESSAGE: ',P2));
        ROLLBACK;
    END;

    IF ROLE_ID_IN IS NULL OR ROLE_ID_IN = 0 THEN
        SET ERROR_CODE_OUT = 'PL_PRC_01';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_PRC_01' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;

    IF PERMISSION_ID_IN IS NULL OR PERMISSION_ID_IN = 0 THEN
        SET ERROR_CODE_OUT = 'PL_PRC_02';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_PRC_02' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;

    IF NOT EXISTS (SELECT * FROM ROLES WHERE RO_ID_ROLE = ROLE_ID_IN AND RO_ACTIVE = 1) THEN
        SET ERROR_CODE_OUT = 'PL_PRC_03';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_PRC_03' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;

    IF NOT EXISTS (SELECT * FROM PERMISSIONS WHERE PE_ID_PERMISSION = PERMISSION_ID_IN) THEN
        SET ERROR_CODE_OUT = 'PL_PRC_04';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_PRC_04' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;

    IF EXISTS (SELECT * FROM ROLE_PERMISSIONS WHERE RP_ID_ROLE = ROLE_ID_IN AND RP_ID_PERMISSION = PERMISSION_ID_IN) THEN
        SET ERROR_CODE_OUT = 'PL_PRC_05';
        SELECT ER_DESCRIPTION FROM ERRORS WHERE ER_CODE = 'PL_PRC_05' INTO ERROR_MESSAGE_OUT;
        LEAVE LABEL;
    END IF;

    START TRANSACTION;
        INSERT INTO ROLE_PERMISSIONS
            (
            `RP_ID_ROLE`,
            `RP_ID_PERMISSION`
            )
        VALUES(
            ROLE_ID_IN,
            PERMISSION_ID_IN
        );
        COMMIT;
        SELECT LAST_INSERT_ID() INTO ID_RESULT_OUT;
END$$

DELIMITER ;